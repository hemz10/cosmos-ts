"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GenesisState = void 0;
/* eslint-disable */
const rewards_1 = require("./rewards");
const coin_1 = require("../../../cosmos/base/v1beta1/coin");
const helpers_1 = require("../../../helpers");
const _m0 = __importStar(require("protobufjs/minimal"));
function createBaseGenesisState() {
    return {
        params: undefined,
        contractsMetadata: [],
        blockRewards: [],
        txRewards: [],
        minConsensusFee: undefined,
        rewardsRecordLastId: helpers_1.Long.UZERO,
        rewardsRecords: [],
        flatFees: []
    };
}
exports.GenesisState = {
    encode(message, writer = _m0.Writer.create()) {
        if (message.params !== undefined) {
            rewards_1.Params.encode(message.params, writer.uint32(10).fork()).ldelim();
        }
        for (const v of message.contractsMetadata) {
            rewards_1.ContractMetadata.encode(v, writer.uint32(18).fork()).ldelim();
        }
        for (const v of message.blockRewards) {
            rewards_1.BlockRewards.encode(v, writer.uint32(26).fork()).ldelim();
        }
        for (const v of message.txRewards) {
            rewards_1.TxRewards.encode(v, writer.uint32(34).fork()).ldelim();
        }
        if (message.minConsensusFee !== undefined) {
            coin_1.DecCoin.encode(message.minConsensusFee, writer.uint32(42).fork()).ldelim();
        }
        if (!message.rewardsRecordLastId.isZero()) {
            writer.uint32(48).uint64(message.rewardsRecordLastId);
        }
        for (const v of message.rewardsRecords) {
            rewards_1.RewardsRecord.encode(v, writer.uint32(58).fork()).ldelim();
        }
        for (const v of message.flatFees) {
            rewards_1.FlatFee.encode(v, writer.uint32(66).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseGenesisState();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.params = rewards_1.Params.decode(reader, reader.uint32());
                    break;
                case 2:
                    message.contractsMetadata.push(rewards_1.ContractMetadata.decode(reader, reader.uint32()));
                    break;
                case 3:
                    message.blockRewards.push(rewards_1.BlockRewards.decode(reader, reader.uint32()));
                    break;
                case 4:
                    message.txRewards.push(rewards_1.TxRewards.decode(reader, reader.uint32()));
                    break;
                case 5:
                    message.minConsensusFee = coin_1.DecCoin.decode(reader, reader.uint32());
                    break;
                case 6:
                    message.rewardsRecordLastId = reader.uint64();
                    break;
                case 7:
                    message.rewardsRecords.push(rewards_1.RewardsRecord.decode(reader, reader.uint32()));
                    break;
                case 8:
                    message.flatFees.push(rewards_1.FlatFee.decode(reader, reader.uint32()));
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        return {
            params: (0, helpers_1.isSet)(object.params) ? rewards_1.Params.fromJSON(object.params) : undefined,
            contractsMetadata: Array.isArray(object === null || object === void 0 ? void 0 : object.contractsMetadata) ? object.contractsMetadata.map((e) => rewards_1.ContractMetadata.fromJSON(e)) : [],
            blockRewards: Array.isArray(object === null || object === void 0 ? void 0 : object.blockRewards) ? object.blockRewards.map((e) => rewards_1.BlockRewards.fromJSON(e)) : [],
            txRewards: Array.isArray(object === null || object === void 0 ? void 0 : object.txRewards) ? object.txRewards.map((e) => rewards_1.TxRewards.fromJSON(e)) : [],
            minConsensusFee: (0, helpers_1.isSet)(object.minConsensusFee) ? coin_1.DecCoin.fromJSON(object.minConsensusFee) : undefined,
            rewardsRecordLastId: (0, helpers_1.isSet)(object.rewardsRecordLastId) ? helpers_1.Long.fromValue(object.rewardsRecordLastId) : helpers_1.Long.UZERO,
            rewardsRecords: Array.isArray(object === null || object === void 0 ? void 0 : object.rewardsRecords) ? object.rewardsRecords.map((e) => rewards_1.RewardsRecord.fromJSON(e)) : [],
            flatFees: Array.isArray(object === null || object === void 0 ? void 0 : object.flatFees) ? object.flatFees.map((e) => rewards_1.FlatFee.fromJSON(e)) : []
        };
    },
    toJSON(message) {
        const obj = {};
        message.params !== undefined && (obj.params = message.params ? rewards_1.Params.toJSON(message.params) : undefined);
        if (message.contractsMetadata) {
            obj.contractsMetadata = message.contractsMetadata.map(e => e ? rewards_1.ContractMetadata.toJSON(e) : undefined);
        }
        else {
            obj.contractsMetadata = [];
        }
        if (message.blockRewards) {
            obj.blockRewards = message.blockRewards.map(e => e ? rewards_1.BlockRewards.toJSON(e) : undefined);
        }
        else {
            obj.blockRewards = [];
        }
        if (message.txRewards) {
            obj.txRewards = message.txRewards.map(e => e ? rewards_1.TxRewards.toJSON(e) : undefined);
        }
        else {
            obj.txRewards = [];
        }
        message.minConsensusFee !== undefined && (obj.minConsensusFee = message.minConsensusFee ? coin_1.DecCoin.toJSON(message.minConsensusFee) : undefined);
        message.rewardsRecordLastId !== undefined && (obj.rewardsRecordLastId = (message.rewardsRecordLastId || helpers_1.Long.UZERO).toString());
        if (message.rewardsRecords) {
            obj.rewardsRecords = message.rewardsRecords.map(e => e ? rewards_1.RewardsRecord.toJSON(e) : undefined);
        }
        else {
            obj.rewardsRecords = [];
        }
        if (message.flatFees) {
            obj.flatFees = message.flatFees.map(e => e ? rewards_1.FlatFee.toJSON(e) : undefined);
        }
        else {
            obj.flatFees = [];
        }
        return obj;
    },
    fromPartial(object) {
        var _a, _b, _c, _d, _e;
        const message = createBaseGenesisState();
        message.params = object.params !== undefined && object.params !== null ? rewards_1.Params.fromPartial(object.params) : undefined;
        message.contractsMetadata = ((_a = object.contractsMetadata) === null || _a === void 0 ? void 0 : _a.map(e => rewards_1.ContractMetadata.fromPartial(e))) || [];
        message.blockRewards = ((_b = object.blockRewards) === null || _b === void 0 ? void 0 : _b.map(e => rewards_1.BlockRewards.fromPartial(e))) || [];
        message.txRewards = ((_c = object.txRewards) === null || _c === void 0 ? void 0 : _c.map(e => rewards_1.TxRewards.fromPartial(e))) || [];
        message.minConsensusFee = object.minConsensusFee !== undefined && object.minConsensusFee !== null ? coin_1.DecCoin.fromPartial(object.minConsensusFee) : undefined;
        message.rewardsRecordLastId = object.rewardsRecordLastId !== undefined && object.rewardsRecordLastId !== null ? helpers_1.Long.fromValue(object.rewardsRecordLastId) : helpers_1.Long.UZERO;
        message.rewardsRecords = ((_d = object.rewardsRecords) === null || _d === void 0 ? void 0 : _d.map(e => rewards_1.RewardsRecord.fromPartial(e))) || [];
        message.flatFees = ((_e = object.flatFees) === null || _e === void 0 ? void 0 : _e.map(e => rewards_1.FlatFee.fromPartial(e))) || [];
        return message;
    }
};
//# sourceMappingURL=genesis.js.map