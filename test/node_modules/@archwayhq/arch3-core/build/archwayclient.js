"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ArchwayClient = void 0;
const cosmwasm_stargate_1 = require("@cosmjs/cosmwasm-stargate");
const tendermint_rpc_1 = require("@cosmjs/tendermint-rpc");
const queryclient_1 = require("./queryclient");
/**
 * Extension to the {@link CosmWasmClient } with queries for Archway's modules.
 */
class ArchwayClient extends cosmwasm_stargate_1.CosmWasmClient {
    constructor(tmClient) {
        super(tmClient);
        this.archwayQueryClient = (0, queryclient_1.createArchwayQueryClient)(tmClient);
    }
    /**
     * Creates an instance by connecting to the given Tendermint RPC endpoint.
     *
     * @param endpoint - String URL of the RPC endpoint to connect or an {@link HttpEndpoint} object.
     * @returns An {@link ArchwayClient} connected to the endpoint.
     *
     * @see Use {@link ArchwayClient.create} if you need Tendermint 0.37 support.
     */
    static async connect(endpoint) {
        const tmClient = await tendermint_rpc_1.Tendermint34Client.connect(endpoint);
        return ArchwayClient.create(tmClient);
    }
    /**
     * Creates an instance by connecting to the given Tendermint RPC endpoint using an {@link HttpBatchClient} to batch
     * multiple requests and reduce queries to the server.
     *
     * @param endpoint - String URL of the RPC endpoint to connect or an {@link HttpEndpoint} object.
     * @param options - Optional configuration to control how the {@link HttpBatchClient} will batch requests.
     * @returns An {@link ArchwayClient} connected to the endpoint.
     *
     * @remarks This factory method doesn't support WebSocket endpoints.
     *
     * @see Use {@link ArchwayClient.create} if you need Tendermint 0.37 support.
     */
    static async connectWithBatchClient(endpoint, options) {
        const rpcClient = new tendermint_rpc_1.HttpBatchClient(endpoint, options);
        const tmClient = await tendermint_rpc_1.Tendermint34Client.create(rpcClient);
        return ArchwayClient.create(tmClient);
    }
    /**
     * Creates an instance from a manually created Tendermint client.
     * Use this to use {@link Tendermint37Client} instead of {@link Tendermint34Client}.
     *
     * @param tmClient - A Tendermint client for a given endpoint.
     * @returns An {@link ArchwayClient} connected to the endpoint.
     */
    /* eslint-disable-next-line @typescript-eslint/require-await */
    static async create(tmClient) {
        return new ArchwayClient(tmClient);
    }
    async getBlockRewardsTracking() {
        return await this.archwayQueryClient.getBlockRewardsTracking();
    }
    async getContractMetadata(contractAddress) {
        return await this.archwayQueryClient.getContractMetadata(contractAddress);
    }
    async getContractPremium(contractAddress) {
        return await this.archwayQueryClient.getContractPremium(contractAddress);
    }
    async getEstimateTxFees(gasLimit, contractAddress) {
        return await this.archwayQueryClient.getEstimateTxFees(gasLimit, contractAddress);
    }
    async getOutstandingRewards(rewardsAddress) {
        return await this.archwayQueryClient.getOutstandingRewards(rewardsAddress);
    }
    async getRewardsPool() {
        return await this.archwayQueryClient.getRewardsPool();
    }
    async getAllRewardsRecords(rewardsAddress) {
        return await this.archwayQueryClient.getAllRewardsRecords(rewardsAddress);
    }
}
exports.ArchwayClient = ArchwayClient;
//# sourceMappingURL=archwayclient.js.map