import * as _0 from "./rewards/v1/events";
import * as _1 from "./rewards/v1/genesis";
import * as _2 from "./rewards/v1/query";
import * as _3 from "./rewards/v1/rewards";
import * as _4 from "./rewards/v1/tx";
import * as _5 from "./tracking/v1/genesis";
import * as _6 from "./tracking/v1/query";
import * as _7 from "./tracking/v1/tracking";
import * as _60 from "./rewards/v1/query.rpc.Query";
import * as _61 from "./tracking/v1/query.rpc.Query";
import * as _62 from "./rewards/v1/tx.rpc.msg";
export declare namespace archway {
    namespace rewards {
        const v1: {
            MsgClientImpl: typeof _62.MsgClientImpl;
            QueryClientImpl: typeof _60.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                params(request?: _2.QueryParamsRequest): Promise<_2.QueryParamsResponse>;
                contractMetadata(request: _2.QueryContractMetadataRequest): Promise<_2.QueryContractMetadataResponse>;
                blockRewardsTracking(request?: _2.QueryBlockRewardsTrackingRequest): Promise<_2.QueryBlockRewardsTrackingResponse>;
                rewardsPool(request?: _2.QueryRewardsPoolRequest): Promise<_2.QueryRewardsPoolResponse>;
                estimateTxFees(request: _2.QueryEstimateTxFeesRequest): Promise<_2.QueryEstimateTxFeesResponse>;
                rewardsRecords(request: _2.QueryRewardsRecordsRequest): Promise<_2.QueryRewardsRecordsResponse>;
                outstandingRewards(request: _2.QueryOutstandingRewardsRequest): Promise<_2.QueryOutstandingRewardsResponse>;
                flatFee(request: _2.QueryFlatFeeRequest): Promise<_2.QueryFlatFeeResponse>;
            };
            registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
            load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
            MessageComposer: {
                encoded: {
                    setContractMetadata(value: _4.MsgSetContractMetadata): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    withdrawRewards(value: _4.MsgWithdrawRewards): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    setFlatFee(value: _4.MsgSetFlatFee): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                };
                withTypeUrl: {
                    setContractMetadata(value: _4.MsgSetContractMetadata): {
                        typeUrl: string;
                        value: _4.MsgSetContractMetadata;
                    };
                    withdrawRewards(value: _4.MsgWithdrawRewards): {
                        typeUrl: string;
                        value: _4.MsgWithdrawRewards;
                    };
                    setFlatFee(value: _4.MsgSetFlatFee): {
                        typeUrl: string;
                        value: _4.MsgSetFlatFee;
                    };
                };
                toJSON: {
                    setContractMetadata(value: _4.MsgSetContractMetadata): {
                        typeUrl: string;
                        value: unknown;
                    };
                    withdrawRewards(value: _4.MsgWithdrawRewards): {
                        typeUrl: string;
                        value: unknown;
                    };
                    setFlatFee(value: _4.MsgSetFlatFee): {
                        typeUrl: string;
                        value: unknown;
                    };
                };
                fromJSON: {
                    setContractMetadata(value: any): {
                        typeUrl: string;
                        value: _4.MsgSetContractMetadata;
                    };
                    withdrawRewards(value: any): {
                        typeUrl: string;
                        value: _4.MsgWithdrawRewards;
                    };
                    setFlatFee(value: any): {
                        typeUrl: string;
                        value: _4.MsgSetFlatFee;
                    };
                };
                fromPartial: {
                    setContractMetadata(value: _4.MsgSetContractMetadata): {
                        typeUrl: string;
                        value: _4.MsgSetContractMetadata;
                    };
                    withdrawRewards(value: _4.MsgWithdrawRewards): {
                        typeUrl: string;
                        value: _4.MsgWithdrawRewards;
                    };
                    setFlatFee(value: _4.MsgSetFlatFee): {
                        typeUrl: string;
                        value: _4.MsgSetFlatFee;
                    };
                };
            };
            AminoConverter: {
                "/archway.rewards.v1.MsgSetContractMetadata": {
                    aminoType: string;
                    toAmino: ({ senderAddress, metadata }: _4.MsgSetContractMetadata) => {
                        sender_address: string;
                        metadata: {
                            contract_address: string;
                            owner_address: string;
                            rewards_address: string;
                        };
                    };
                    fromAmino: ({ sender_address, metadata }: {
                        sender_address: string;
                        metadata: {
                            contract_address: string;
                            owner_address: string;
                            rewards_address: string;
                        };
                    }) => _4.MsgSetContractMetadata;
                };
                "/archway.rewards.v1.MsgWithdrawRewards": {
                    aminoType: string;
                    toAmino: ({ rewardsAddress, recordsLimit, recordIds }: _4.MsgWithdrawRewards) => {
                        rewards_address: string;
                        records_limit: {
                            limit: string;
                        };
                        record_ids: {
                            ids: string[];
                        };
                    };
                    fromAmino: ({ rewards_address, records_limit, record_ids }: {
                        rewards_address: string;
                        records_limit: {
                            limit: string;
                        };
                        record_ids: {
                            ids: string[];
                        };
                    }) => _4.MsgWithdrawRewards;
                };
                "/archway.rewards.v1.MsgSetFlatFee": {
                    aminoType: string;
                    toAmino: ({ senderAddress, contractAddress, flatFeeAmount }: _4.MsgSetFlatFee) => {
                        sender_address: string;
                        contract_address: string;
                        flat_fee_amount: {
                            denom: string;
                            amount: string;
                        };
                    };
                    fromAmino: ({ sender_address, contract_address, flat_fee_amount }: {
                        sender_address: string;
                        contract_address: string;
                        flat_fee_amount: {
                            denom: string;
                            amount: string;
                        };
                    }) => _4.MsgSetFlatFee;
                };
            };
            MsgSetContractMetadata: {
                encode(message: _4.MsgSetContractMetadata, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _4.MsgSetContractMetadata;
                fromJSON(object: any): _4.MsgSetContractMetadata;
                toJSON(message: _4.MsgSetContractMetadata): unknown;
                fromPartial(object: Partial<_4.MsgSetContractMetadata>): _4.MsgSetContractMetadata;
            };
            MsgSetContractMetadataResponse: {
                encode(_: _4.MsgSetContractMetadataResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _4.MsgSetContractMetadataResponse;
                fromJSON(_: any): _4.MsgSetContractMetadataResponse;
                toJSON(_: _4.MsgSetContractMetadataResponse): unknown;
                fromPartial(_: Partial<_4.MsgSetContractMetadataResponse>): _4.MsgSetContractMetadataResponse;
            };
            MsgWithdrawRewards: {
                encode(message: _4.MsgWithdrawRewards, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _4.MsgWithdrawRewards;
                fromJSON(object: any): _4.MsgWithdrawRewards;
                toJSON(message: _4.MsgWithdrawRewards): unknown;
                fromPartial(object: Partial<_4.MsgWithdrawRewards>): _4.MsgWithdrawRewards;
            };
            MsgWithdrawRewards_RecordsLimit: {
                encode(message: _4.MsgWithdrawRewards_RecordsLimit, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _4.MsgWithdrawRewards_RecordsLimit;
                fromJSON(object: any): _4.MsgWithdrawRewards_RecordsLimit;
                toJSON(message: _4.MsgWithdrawRewards_RecordsLimit): unknown;
                fromPartial(object: Partial<_4.MsgWithdrawRewards_RecordsLimit>): _4.MsgWithdrawRewards_RecordsLimit;
            };
            MsgWithdrawRewards_RecordIDs: {
                encode(message: _4.MsgWithdrawRewards_RecordIDs, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _4.MsgWithdrawRewards_RecordIDs;
                fromJSON(object: any): _4.MsgWithdrawRewards_RecordIDs;
                toJSON(message: _4.MsgWithdrawRewards_RecordIDs): unknown;
                fromPartial(object: Partial<_4.MsgWithdrawRewards_RecordIDs>): _4.MsgWithdrawRewards_RecordIDs;
            };
            MsgWithdrawRewardsResponse: {
                encode(message: _4.MsgWithdrawRewardsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _4.MsgWithdrawRewardsResponse;
                fromJSON(object: any): _4.MsgWithdrawRewardsResponse;
                toJSON(message: _4.MsgWithdrawRewardsResponse): unknown;
                fromPartial(object: Partial<_4.MsgWithdrawRewardsResponse>): _4.MsgWithdrawRewardsResponse;
            };
            MsgSetFlatFee: {
                encode(message: _4.MsgSetFlatFee, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _4.MsgSetFlatFee;
                fromJSON(object: any): _4.MsgSetFlatFee;
                toJSON(message: _4.MsgSetFlatFee): unknown;
                fromPartial(object: Partial<_4.MsgSetFlatFee>): _4.MsgSetFlatFee;
            };
            MsgSetFlatFeeResponse: {
                encode(_: _4.MsgSetFlatFeeResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _4.MsgSetFlatFeeResponse;
                fromJSON(_: any): _4.MsgSetFlatFeeResponse;
                toJSON(_: _4.MsgSetFlatFeeResponse): unknown;
                fromPartial(_: Partial<_4.MsgSetFlatFeeResponse>): _4.MsgSetFlatFeeResponse;
            };
            Params: {
                encode(message: _3.Params, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _3.Params;
                fromJSON(object: any): _3.Params;
                toJSON(message: _3.Params): unknown;
                fromPartial(object: Partial<_3.Params>): _3.Params;
            };
            ContractMetadata: {
                encode(message: _3.ContractMetadata, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _3.ContractMetadata;
                fromJSON(object: any): _3.ContractMetadata;
                toJSON(message: _3.ContractMetadata): unknown;
                fromPartial(object: Partial<_3.ContractMetadata>): _3.ContractMetadata;
            };
            BlockRewards: {
                encode(message: _3.BlockRewards, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _3.BlockRewards;
                fromJSON(object: any): _3.BlockRewards;
                toJSON(message: _3.BlockRewards): unknown;
                fromPartial(object: Partial<_3.BlockRewards>): _3.BlockRewards;
            };
            TxRewards: {
                encode(message: _3.TxRewards, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _3.TxRewards;
                fromJSON(object: any): _3.TxRewards;
                toJSON(message: _3.TxRewards): unknown;
                fromPartial(object: Partial<_3.TxRewards>): _3.TxRewards;
            };
            RewardsRecord: {
                encode(message: _3.RewardsRecord, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _3.RewardsRecord;
                fromJSON(object: any): _3.RewardsRecord;
                toJSON(message: _3.RewardsRecord): unknown;
                fromPartial(object: Partial<_3.RewardsRecord>): _3.RewardsRecord;
            };
            FlatFee: {
                encode(message: _3.FlatFee, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _3.FlatFee;
                fromJSON(object: any): _3.FlatFee;
                toJSON(message: _3.FlatFee): unknown;
                fromPartial(object: Partial<_3.FlatFee>): _3.FlatFee;
            };
            QueryParamsRequest: {
                encode(_: _2.QueryParamsRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _2.QueryParamsRequest;
                fromJSON(_: any): _2.QueryParamsRequest;
                toJSON(_: _2.QueryParamsRequest): unknown;
                fromPartial(_: Partial<_2.QueryParamsRequest>): _2.QueryParamsRequest;
            };
            QueryParamsResponse: {
                encode(message: _2.QueryParamsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _2.QueryParamsResponse;
                fromJSON(object: any): _2.QueryParamsResponse;
                toJSON(message: _2.QueryParamsResponse): unknown;
                fromPartial(object: Partial<_2.QueryParamsResponse>): _2.QueryParamsResponse;
            };
            QueryContractMetadataRequest: {
                encode(message: _2.QueryContractMetadataRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _2.QueryContractMetadataRequest;
                fromJSON(object: any): _2.QueryContractMetadataRequest;
                toJSON(message: _2.QueryContractMetadataRequest): unknown;
                fromPartial(object: Partial<_2.QueryContractMetadataRequest>): _2.QueryContractMetadataRequest;
            };
            QueryContractMetadataResponse: {
                encode(message: _2.QueryContractMetadataResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _2.QueryContractMetadataResponse;
                fromJSON(object: any): _2.QueryContractMetadataResponse;
                toJSON(message: _2.QueryContractMetadataResponse): unknown;
                fromPartial(object: Partial<_2.QueryContractMetadataResponse>): _2.QueryContractMetadataResponse;
            };
            QueryBlockRewardsTrackingRequest: {
                encode(_: _2.QueryBlockRewardsTrackingRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _2.QueryBlockRewardsTrackingRequest;
                fromJSON(_: any): _2.QueryBlockRewardsTrackingRequest;
                toJSON(_: _2.QueryBlockRewardsTrackingRequest): unknown;
                fromPartial(_: Partial<_2.QueryBlockRewardsTrackingRequest>): _2.QueryBlockRewardsTrackingRequest;
            };
            QueryBlockRewardsTrackingResponse: {
                encode(message: _2.QueryBlockRewardsTrackingResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _2.QueryBlockRewardsTrackingResponse;
                fromJSON(object: any): _2.QueryBlockRewardsTrackingResponse;
                toJSON(message: _2.QueryBlockRewardsTrackingResponse): unknown;
                fromPartial(object: Partial<_2.QueryBlockRewardsTrackingResponse>): _2.QueryBlockRewardsTrackingResponse;
            };
            QueryRewardsPoolRequest: {
                encode(_: _2.QueryRewardsPoolRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _2.QueryRewardsPoolRequest;
                fromJSON(_: any): _2.QueryRewardsPoolRequest;
                toJSON(_: _2.QueryRewardsPoolRequest): unknown;
                fromPartial(_: Partial<_2.QueryRewardsPoolRequest>): _2.QueryRewardsPoolRequest;
            };
            QueryRewardsPoolResponse: {
                encode(message: _2.QueryRewardsPoolResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _2.QueryRewardsPoolResponse;
                fromJSON(object: any): _2.QueryRewardsPoolResponse;
                toJSON(message: _2.QueryRewardsPoolResponse): unknown;
                fromPartial(object: Partial<_2.QueryRewardsPoolResponse>): _2.QueryRewardsPoolResponse;
            };
            QueryEstimateTxFeesRequest: {
                encode(message: _2.QueryEstimateTxFeesRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _2.QueryEstimateTxFeesRequest;
                fromJSON(object: any): _2.QueryEstimateTxFeesRequest;
                toJSON(message: _2.QueryEstimateTxFeesRequest): unknown;
                fromPartial(object: Partial<_2.QueryEstimateTxFeesRequest>): _2.QueryEstimateTxFeesRequest;
            };
            QueryEstimateTxFeesResponse: {
                encode(message: _2.QueryEstimateTxFeesResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _2.QueryEstimateTxFeesResponse;
                fromJSON(object: any): _2.QueryEstimateTxFeesResponse;
                toJSON(message: _2.QueryEstimateTxFeesResponse): unknown;
                fromPartial(object: Partial<_2.QueryEstimateTxFeesResponse>): _2.QueryEstimateTxFeesResponse;
            };
            BlockTracking: {
                encode(message: _2.BlockTracking, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _2.BlockTracking;
                fromJSON(object: any): _2.BlockTracking;
                toJSON(message: _2.BlockTracking): unknown;
                fromPartial(object: Partial<_2.BlockTracking>): _2.BlockTracking;
            };
            QueryRewardsRecordsRequest: {
                encode(message: _2.QueryRewardsRecordsRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _2.QueryRewardsRecordsRequest;
                fromJSON(object: any): _2.QueryRewardsRecordsRequest;
                toJSON(message: _2.QueryRewardsRecordsRequest): unknown;
                fromPartial(object: Partial<_2.QueryRewardsRecordsRequest>): _2.QueryRewardsRecordsRequest;
            };
            QueryRewardsRecordsResponse: {
                encode(message: _2.QueryRewardsRecordsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _2.QueryRewardsRecordsResponse;
                fromJSON(object: any): _2.QueryRewardsRecordsResponse;
                toJSON(message: _2.QueryRewardsRecordsResponse): unknown;
                fromPartial(object: Partial<_2.QueryRewardsRecordsResponse>): _2.QueryRewardsRecordsResponse;
            };
            QueryOutstandingRewardsRequest: {
                encode(message: _2.QueryOutstandingRewardsRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _2.QueryOutstandingRewardsRequest;
                fromJSON(object: any): _2.QueryOutstandingRewardsRequest;
                toJSON(message: _2.QueryOutstandingRewardsRequest): unknown;
                fromPartial(object: Partial<_2.QueryOutstandingRewardsRequest>): _2.QueryOutstandingRewardsRequest;
            };
            QueryOutstandingRewardsResponse: {
                encode(message: _2.QueryOutstandingRewardsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _2.QueryOutstandingRewardsResponse;
                fromJSON(object: any): _2.QueryOutstandingRewardsResponse;
                toJSON(message: _2.QueryOutstandingRewardsResponse): unknown;
                fromPartial(object: Partial<_2.QueryOutstandingRewardsResponse>): _2.QueryOutstandingRewardsResponse;
            };
            QueryFlatFeeRequest: {
                encode(message: _2.QueryFlatFeeRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _2.QueryFlatFeeRequest;
                fromJSON(object: any): _2.QueryFlatFeeRequest;
                toJSON(message: _2.QueryFlatFeeRequest): unknown;
                fromPartial(object: Partial<_2.QueryFlatFeeRequest>): _2.QueryFlatFeeRequest;
            };
            QueryFlatFeeResponse: {
                encode(message: _2.QueryFlatFeeResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _2.QueryFlatFeeResponse;
                fromJSON(object: any): _2.QueryFlatFeeResponse;
                toJSON(message: _2.QueryFlatFeeResponse): unknown;
                fromPartial(object: Partial<_2.QueryFlatFeeResponse>): _2.QueryFlatFeeResponse;
            };
            GenesisState: {
                encode(message: _1.GenesisState, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _1.GenesisState;
                fromJSON(object: any): _1.GenesisState;
                toJSON(message: _1.GenesisState): unknown;
                fromPartial(object: Partial<_1.GenesisState>): _1.GenesisState;
            };
            ContractMetadataSetEvent: {
                encode(message: _0.ContractMetadataSetEvent, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _0.ContractMetadataSetEvent;
                fromJSON(object: any): _0.ContractMetadataSetEvent;
                toJSON(message: _0.ContractMetadataSetEvent): unknown;
                fromPartial(object: Partial<_0.ContractMetadataSetEvent>): _0.ContractMetadataSetEvent;
            };
            ContractRewardCalculationEvent: {
                encode(message: _0.ContractRewardCalculationEvent, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _0.ContractRewardCalculationEvent;
                fromJSON(object: any): _0.ContractRewardCalculationEvent;
                toJSON(message: _0.ContractRewardCalculationEvent): unknown;
                fromPartial(object: Partial<_0.ContractRewardCalculationEvent>): _0.ContractRewardCalculationEvent;
            };
            RewardsWithdrawEvent: {
                encode(message: _0.RewardsWithdrawEvent, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _0.RewardsWithdrawEvent;
                fromJSON(object: any): _0.RewardsWithdrawEvent;
                toJSON(message: _0.RewardsWithdrawEvent): unknown;
                fromPartial(object: Partial<_0.RewardsWithdrawEvent>): _0.RewardsWithdrawEvent;
            };
            MinConsensusFeeSetEvent: {
                encode(message: _0.MinConsensusFeeSetEvent, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _0.MinConsensusFeeSetEvent;
                fromJSON(object: any): _0.MinConsensusFeeSetEvent;
                toJSON(message: _0.MinConsensusFeeSetEvent): unknown;
                fromPartial(object: Partial<_0.MinConsensusFeeSetEvent>): _0.MinConsensusFeeSetEvent;
            };
            ContractFlatFeeSetEvent: {
                encode(message: _0.ContractFlatFeeSetEvent, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _0.ContractFlatFeeSetEvent;
                fromJSON(object: any): _0.ContractFlatFeeSetEvent;
                toJSON(message: _0.ContractFlatFeeSetEvent): unknown;
                fromPartial(object: Partial<_0.ContractFlatFeeSetEvent>): _0.ContractFlatFeeSetEvent;
            };
        };
    }
    namespace tracking {
        const v1: {
            QueryClientImpl: typeof _61.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                blockGasTracking(request?: _6.QueryBlockGasTrackingRequest): Promise<_6.QueryBlockGasTrackingResponse>;
            };
            contractOperationFromJSON(object: any): _7.ContractOperation;
            contractOperationToJSON(object: _7.ContractOperation): string;
            ContractOperation: typeof _7.ContractOperation;
            TxInfo: {
                encode(message: _7.TxInfo, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _7.TxInfo;
                fromJSON(object: any): _7.TxInfo;
                toJSON(message: _7.TxInfo): unknown;
                fromPartial(object: Partial<_7.TxInfo>): _7.TxInfo;
            };
            ContractOperationInfo: {
                encode(message: _7.ContractOperationInfo, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _7.ContractOperationInfo;
                fromJSON(object: any): _7.ContractOperationInfo;
                toJSON(message: _7.ContractOperationInfo): unknown;
                fromPartial(object: Partial<_7.ContractOperationInfo>): _7.ContractOperationInfo;
            };
            BlockTracking: {
                encode(message: _7.BlockTracking, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _7.BlockTracking;
                fromJSON(object: any): _7.BlockTracking;
                toJSON(message: _7.BlockTracking): unknown;
                fromPartial(object: Partial<_7.BlockTracking>): _7.BlockTracking;
            };
            TxTracking: {
                encode(message: _7.TxTracking, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _7.TxTracking;
                fromJSON(object: any): _7.TxTracking;
                toJSON(message: _7.TxTracking): unknown;
                fromPartial(object: Partial<_7.TxTracking>): _7.TxTracking;
            };
            QueryBlockGasTrackingRequest: {
                encode(_: _6.QueryBlockGasTrackingRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _6.QueryBlockGasTrackingRequest;
                fromJSON(_: any): _6.QueryBlockGasTrackingRequest;
                toJSON(_: _6.QueryBlockGasTrackingRequest): unknown;
                fromPartial(_: Partial<_6.QueryBlockGasTrackingRequest>): _6.QueryBlockGasTrackingRequest;
            };
            QueryBlockGasTrackingResponse: {
                encode(message: _6.QueryBlockGasTrackingResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _6.QueryBlockGasTrackingResponse;
                fromJSON(object: any): _6.QueryBlockGasTrackingResponse;
                toJSON(message: _6.QueryBlockGasTrackingResponse): unknown;
                fromPartial(object: Partial<_6.QueryBlockGasTrackingResponse>): _6.QueryBlockGasTrackingResponse;
            };
            GenesisState: {
                encode(message: _5.GenesisState, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _5.GenesisState;
                fromJSON(object: any): _5.GenesisState;
                toJSON(message: _5.GenesisState): unknown;
                fromPartial(object: Partial<_5.GenesisState>): _5.GenesisState;
            };
        };
    }
}
