import { GeneratedType, Registry, OfflineSigner } from "@cosmjs/proto-signing";
import { AminoTypes, SigningStargateClient } from "@cosmjs/stargate";
import { HttpEndpoint } from "@cosmjs/tendermint-rpc";
export declare const archwayAminoConverters: {
    "/archway.rewards.v1.MsgSetContractMetadata": {
        aminoType: string;
        toAmino: ({ senderAddress, metadata }: import("./rewards/v1/tx").MsgSetContractMetadata) => {
            sender_address: string;
            metadata: {
                contract_address: string;
                owner_address: string;
                rewards_address: string;
            };
        };
        fromAmino: ({ sender_address, metadata }: {
            sender_address: string;
            metadata: {
                contract_address: string;
                owner_address: string;
                rewards_address: string;
            };
        }) => import("./rewards/v1/tx").MsgSetContractMetadata;
    };
    "/archway.rewards.v1.MsgWithdrawRewards": {
        aminoType: string;
        toAmino: ({ rewardsAddress, recordsLimit, recordIds }: import("./rewards/v1/tx").MsgWithdrawRewards) => {
            rewards_address: string;
            records_limit: {
                limit: string;
            };
            record_ids: {
                ids: string[];
            };
        };
        fromAmino: ({ rewards_address, records_limit, record_ids }: {
            rewards_address: string;
            records_limit: {
                limit: string;
            };
            record_ids: {
                ids: string[];
            };
        }) => import("./rewards/v1/tx").MsgWithdrawRewards;
    };
    "/archway.rewards.v1.MsgSetFlatFee": {
        aminoType: string;
        toAmino: ({ senderAddress, contractAddress, flatFeeAmount }: import("./rewards/v1/tx").MsgSetFlatFee) => {
            sender_address: string;
            contract_address: string;
            flat_fee_amount: {
                denom: string;
                amount: string;
            };
        };
        fromAmino: ({ sender_address, contract_address, flat_fee_amount }: {
            sender_address: string;
            contract_address: string;
            flat_fee_amount: {
                denom: string;
                amount: string;
            };
        }) => import("./rewards/v1/tx").MsgSetFlatFee;
    };
};
export declare const archwayProtoRegistry: ReadonlyArray<[string, GeneratedType]>;
export declare const getSigningArchwayClientOptions: ({ defaultTypes }?: {
    defaultTypes?: ReadonlyArray<[string, GeneratedType]>;
}) => {
    registry: Registry;
    aminoTypes: AminoTypes;
};
export declare const getSigningArchwayClient: ({ rpcEndpoint, signer, defaultTypes }: {
    rpcEndpoint: string | HttpEndpoint;
    signer: OfflineSigner;
    defaultTypes?: ReadonlyArray<[string, GeneratedType]>;
}) => Promise<SigningStargateClient>;
