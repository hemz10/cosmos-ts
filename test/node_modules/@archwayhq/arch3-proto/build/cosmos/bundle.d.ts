import * as _9 from "./bank/v1beta1/bank";
import * as _10 from "./bank/v1beta1/genesis";
import * as _11 from "./bank/v1beta1/query";
import * as _12 from "./bank/v1beta1/tx";
import * as _13 from "./base/abci/v1beta1/abci";
import * as _14 from "./base/query/v1beta1/pagination";
import * as _15 from "./base/v1beta1/coin";
import * as _16 from "./crypto/ed25519/keys";
import * as _17 from "./crypto/multisig/keys";
import * as _18 from "./crypto/secp256k1/keys";
import * as _19 from "./tx/signing/v1beta1/signing";
import * as _20 from "./tx/v1beta1/service";
import * as _21 from "./tx/v1beta1/tx";
import * as _65 from "./bank/v1beta1/query.rpc.Query";
import * as _66 from "./tx/v1beta1/service.rpc.Service";
import * as _67 from "./bank/v1beta1/tx.rpc.msg";
export declare namespace cosmos {
    namespace bank {
        const v1beta1: {
            MsgClientImpl: typeof _67.MsgClientImpl;
            QueryClientImpl: typeof _65.QueryClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                balance(request: _11.QueryBalanceRequest): Promise<_11.QueryBalanceResponse>;
                allBalances(request: _11.QueryAllBalancesRequest): Promise<_11.QueryAllBalancesResponse>;
                totalSupply(request?: _11.QueryTotalSupplyRequest): Promise<_11.QueryTotalSupplyResponse>;
                supplyOf(request: _11.QuerySupplyOfRequest): Promise<_11.QuerySupplyOfResponse>;
                params(request?: _11.QueryParamsRequest): Promise<_11.QueryParamsResponse>;
                denomMetadata(request: _11.QueryDenomMetadataRequest): Promise<_11.QueryDenomMetadataResponse>;
                denomsMetadata(request?: _11.QueryDenomsMetadataRequest): Promise<_11.QueryDenomsMetadataResponse>;
            };
            registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
            load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
            MessageComposer: {
                encoded: {
                    send(value: _12.MsgSend): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                    multiSend(value: _12.MsgMultiSend): {
                        typeUrl: string;
                        value: Uint8Array;
                    };
                };
                withTypeUrl: {
                    send(value: _12.MsgSend): {
                        typeUrl: string;
                        value: _12.MsgSend;
                    };
                    multiSend(value: _12.MsgMultiSend): {
                        typeUrl: string;
                        value: _12.MsgMultiSend;
                    };
                };
                toJSON: {
                    send(value: _12.MsgSend): {
                        typeUrl: string;
                        value: unknown;
                    };
                    multiSend(value: _12.MsgMultiSend): {
                        typeUrl: string;
                        value: unknown;
                    };
                };
                fromJSON: {
                    send(value: any): {
                        typeUrl: string;
                        value: _12.MsgSend;
                    };
                    multiSend(value: any): {
                        typeUrl: string;
                        value: _12.MsgMultiSend;
                    };
                };
                fromPartial: {
                    send(value: _12.MsgSend): {
                        typeUrl: string;
                        value: _12.MsgSend;
                    };
                    multiSend(value: _12.MsgMultiSend): {
                        typeUrl: string;
                        value: _12.MsgMultiSend;
                    };
                };
            };
            AminoConverter: {
                "/cosmos.bank.v1beta1.MsgSend": {
                    aminoType: string;
                    toAmino: ({ fromAddress, toAddress, amount }: _12.MsgSend) => {
                        from_address: string;
                        to_address: string;
                        amount: {
                            denom: string;
                            amount: string;
                        }[];
                    };
                    fromAmino: ({ from_address, to_address, amount }: {
                        from_address: string;
                        to_address: string;
                        amount: {
                            denom: string;
                            amount: string;
                        }[];
                    }) => _12.MsgSend;
                };
                "/cosmos.bank.v1beta1.MsgMultiSend": {
                    aminoType: string;
                    toAmino: ({ inputs, outputs }: _12.MsgMultiSend) => {
                        inputs: {
                            address: string;
                            coins: {
                                denom: string;
                                amount: string;
                            }[];
                        }[];
                        outputs: {
                            address: string;
                            coins: {
                                denom: string;
                                amount: string;
                            }[];
                        }[];
                    };
                    fromAmino: ({ inputs, outputs }: {
                        inputs: {
                            address: string;
                            coins: {
                                denom: string;
                                amount: string;
                            }[];
                        }[];
                        outputs: {
                            address: string;
                            coins: {
                                denom: string;
                                amount: string;
                            }[];
                        }[];
                    }) => _12.MsgMultiSend;
                };
            };
            MsgSend: {
                encode(message: _12.MsgSend, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _12.MsgSend;
                fromJSON(object: any): _12.MsgSend;
                toJSON(message: _12.MsgSend): unknown;
                fromPartial(object: Partial<_12.MsgSend>): _12.MsgSend;
            };
            MsgSendResponse: {
                encode(_: _12.MsgSendResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _12.MsgSendResponse;
                fromJSON(_: any): _12.MsgSendResponse;
                toJSON(_: _12.MsgSendResponse): unknown;
                fromPartial(_: Partial<_12.MsgSendResponse>): _12.MsgSendResponse;
            };
            MsgMultiSend: {
                encode(message: _12.MsgMultiSend, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _12.MsgMultiSend;
                fromJSON(object: any): _12.MsgMultiSend;
                toJSON(message: _12.MsgMultiSend): unknown;
                fromPartial(object: Partial<_12.MsgMultiSend>): _12.MsgMultiSend;
            };
            MsgMultiSendResponse: {
                encode(_: _12.MsgMultiSendResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _12.MsgMultiSendResponse;
                fromJSON(_: any): _12.MsgMultiSendResponse;
                toJSON(_: _12.MsgMultiSendResponse): unknown;
                fromPartial(_: Partial<_12.MsgMultiSendResponse>): _12.MsgMultiSendResponse;
            };
            QueryBalanceRequest: {
                encode(message: _11.QueryBalanceRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _11.QueryBalanceRequest;
                fromJSON(object: any): _11.QueryBalanceRequest;
                toJSON(message: _11.QueryBalanceRequest): unknown;
                fromPartial(object: Partial<_11.QueryBalanceRequest>): _11.QueryBalanceRequest;
            };
            QueryBalanceResponse: {
                encode(message: _11.QueryBalanceResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _11.QueryBalanceResponse;
                fromJSON(object: any): _11.QueryBalanceResponse;
                toJSON(message: _11.QueryBalanceResponse): unknown;
                fromPartial(object: Partial<_11.QueryBalanceResponse>): _11.QueryBalanceResponse;
            };
            QueryAllBalancesRequest: {
                encode(message: _11.QueryAllBalancesRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _11.QueryAllBalancesRequest;
                fromJSON(object: any): _11.QueryAllBalancesRequest;
                toJSON(message: _11.QueryAllBalancesRequest): unknown;
                fromPartial(object: Partial<_11.QueryAllBalancesRequest>): _11.QueryAllBalancesRequest;
            };
            QueryAllBalancesResponse: {
                encode(message: _11.QueryAllBalancesResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _11.QueryAllBalancesResponse;
                fromJSON(object: any): _11.QueryAllBalancesResponse;
                toJSON(message: _11.QueryAllBalancesResponse): unknown;
                fromPartial(object: Partial<_11.QueryAllBalancesResponse>): _11.QueryAllBalancesResponse;
            };
            QueryTotalSupplyRequest: {
                encode(_: _11.QueryTotalSupplyRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _11.QueryTotalSupplyRequest;
                fromJSON(_: any): _11.QueryTotalSupplyRequest;
                toJSON(_: _11.QueryTotalSupplyRequest): unknown;
                fromPartial(_: Partial<_11.QueryTotalSupplyRequest>): _11.QueryTotalSupplyRequest;
            };
            QueryTotalSupplyResponse: {
                encode(message: _11.QueryTotalSupplyResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _11.QueryTotalSupplyResponse;
                fromJSON(object: any): _11.QueryTotalSupplyResponse;
                toJSON(message: _11.QueryTotalSupplyResponse): unknown;
                fromPartial(object: Partial<_11.QueryTotalSupplyResponse>): _11.QueryTotalSupplyResponse;
            };
            QuerySupplyOfRequest: {
                encode(message: _11.QuerySupplyOfRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _11.QuerySupplyOfRequest;
                fromJSON(object: any): _11.QuerySupplyOfRequest;
                toJSON(message: _11.QuerySupplyOfRequest): unknown;
                fromPartial(object: Partial<_11.QuerySupplyOfRequest>): _11.QuerySupplyOfRequest;
            };
            QuerySupplyOfResponse: {
                encode(message: _11.QuerySupplyOfResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _11.QuerySupplyOfResponse;
                fromJSON(object: any): _11.QuerySupplyOfResponse;
                toJSON(message: _11.QuerySupplyOfResponse): unknown;
                fromPartial(object: Partial<_11.QuerySupplyOfResponse>): _11.QuerySupplyOfResponse;
            };
            QueryParamsRequest: {
                encode(_: _11.QueryParamsRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _11.QueryParamsRequest;
                fromJSON(_: any): _11.QueryParamsRequest;
                toJSON(_: _11.QueryParamsRequest): unknown;
                fromPartial(_: Partial<_11.QueryParamsRequest>): _11.QueryParamsRequest;
            };
            QueryParamsResponse: {
                encode(message: _11.QueryParamsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _11.QueryParamsResponse;
                fromJSON(object: any): _11.QueryParamsResponse;
                toJSON(message: _11.QueryParamsResponse): unknown;
                fromPartial(object: Partial<_11.QueryParamsResponse>): _11.QueryParamsResponse;
            };
            QueryDenomsMetadataRequest: {
                encode(message: _11.QueryDenomsMetadataRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _11.QueryDenomsMetadataRequest;
                fromJSON(object: any): _11.QueryDenomsMetadataRequest;
                toJSON(message: _11.QueryDenomsMetadataRequest): unknown;
                fromPartial(object: Partial<_11.QueryDenomsMetadataRequest>): _11.QueryDenomsMetadataRequest;
            };
            QueryDenomsMetadataResponse: {
                encode(message: _11.QueryDenomsMetadataResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _11.QueryDenomsMetadataResponse;
                fromJSON(object: any): _11.QueryDenomsMetadataResponse;
                toJSON(message: _11.QueryDenomsMetadataResponse): unknown;
                fromPartial(object: Partial<_11.QueryDenomsMetadataResponse>): _11.QueryDenomsMetadataResponse;
            };
            QueryDenomMetadataRequest: {
                encode(message: _11.QueryDenomMetadataRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _11.QueryDenomMetadataRequest;
                fromJSON(object: any): _11.QueryDenomMetadataRequest;
                toJSON(message: _11.QueryDenomMetadataRequest): unknown;
                fromPartial(object: Partial<_11.QueryDenomMetadataRequest>): _11.QueryDenomMetadataRequest;
            };
            QueryDenomMetadataResponse: {
                encode(message: _11.QueryDenomMetadataResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _11.QueryDenomMetadataResponse;
                fromJSON(object: any): _11.QueryDenomMetadataResponse;
                toJSON(message: _11.QueryDenomMetadataResponse): unknown;
                fromPartial(object: Partial<_11.QueryDenomMetadataResponse>): _11.QueryDenomMetadataResponse;
            };
            GenesisState: {
                encode(message: _10.GenesisState, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _10.GenesisState;
                fromJSON(object: any): _10.GenesisState;
                toJSON(message: _10.GenesisState): unknown;
                fromPartial(object: Partial<_10.GenesisState>): _10.GenesisState;
            };
            Balance: {
                encode(message: _10.Balance, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _10.Balance;
                fromJSON(object: any): _10.Balance;
                toJSON(message: _10.Balance): unknown;
                fromPartial(object: Partial<_10.Balance>): _10.Balance;
            };
            Params: {
                encode(message: _9.Params, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _9.Params;
                fromJSON(object: any): _9.Params;
                toJSON(message: _9.Params): unknown;
                fromPartial(object: Partial<_9.Params>): _9.Params;
            };
            SendEnabled: {
                encode(message: _9.SendEnabled, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _9.SendEnabled;
                fromJSON(object: any): _9.SendEnabled;
                toJSON(message: _9.SendEnabled): unknown;
                fromPartial(object: Partial<_9.SendEnabled>): _9.SendEnabled;
            };
            Input: {
                encode(message: _9.Input, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _9.Input;
                fromJSON(object: any): _9.Input;
                toJSON(message: _9.Input): unknown;
                fromPartial(object: Partial<_9.Input>): _9.Input;
            };
            Output: {
                encode(message: _9.Output, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _9.Output;
                fromJSON(object: any): _9.Output;
                toJSON(message: _9.Output): unknown;
                fromPartial(object: Partial<_9.Output>): _9.Output;
            };
            Supply: {
                encode(message: _9.Supply, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _9.Supply;
                fromJSON(object: any): _9.Supply;
                toJSON(message: _9.Supply): unknown;
                fromPartial(object: Partial<_9.Supply>): _9.Supply;
            };
            DenomUnit: {
                encode(message: _9.DenomUnit, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _9.DenomUnit;
                fromJSON(object: any): _9.DenomUnit;
                toJSON(message: _9.DenomUnit): unknown;
                fromPartial(object: Partial<_9.DenomUnit>): _9.DenomUnit;
            };
            Metadata: {
                encode(message: _9.Metadata, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _9.Metadata;
                fromJSON(object: any): _9.Metadata;
                toJSON(message: _9.Metadata): unknown;
                fromPartial(object: Partial<_9.Metadata>): _9.Metadata;
            };
        };
    }
    namespace base {
        namespace abci {
            const v1beta1: {
                TxResponse: {
                    encode(message: _13.TxResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _13.TxResponse;
                    fromJSON(object: any): _13.TxResponse;
                    toJSON(message: _13.TxResponse): unknown;
                    fromPartial(object: Partial<_13.TxResponse>): _13.TxResponse;
                };
                ABCIMessageLog: {
                    encode(message: _13.ABCIMessageLog, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _13.ABCIMessageLog;
                    fromJSON(object: any): _13.ABCIMessageLog;
                    toJSON(message: _13.ABCIMessageLog): unknown;
                    fromPartial(object: Partial<_13.ABCIMessageLog>): _13.ABCIMessageLog;
                };
                StringEvent: {
                    encode(message: _13.StringEvent, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _13.StringEvent;
                    fromJSON(object: any): _13.StringEvent;
                    toJSON(message: _13.StringEvent): unknown;
                    fromPartial(object: Partial<_13.StringEvent>): _13.StringEvent;
                };
                Attribute: {
                    encode(message: _13.Attribute, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _13.Attribute;
                    fromJSON(object: any): _13.Attribute;
                    toJSON(message: _13.Attribute): unknown;
                    fromPartial(object: Partial<_13.Attribute>): _13.Attribute;
                };
                GasInfo: {
                    encode(message: _13.GasInfo, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _13.GasInfo;
                    fromJSON(object: any): _13.GasInfo;
                    toJSON(message: _13.GasInfo): unknown;
                    fromPartial(object: Partial<_13.GasInfo>): _13.GasInfo;
                };
                Result: {
                    encode(message: _13.Result, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _13.Result;
                    fromJSON(object: any): _13.Result;
                    toJSON(message: _13.Result): unknown;
                    fromPartial(object: Partial<_13.Result>): _13.Result;
                };
                SimulationResponse: {
                    encode(message: _13.SimulationResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _13.SimulationResponse;
                    fromJSON(object: any): _13.SimulationResponse;
                    toJSON(message: _13.SimulationResponse): unknown;
                    fromPartial(object: Partial<_13.SimulationResponse>): _13.SimulationResponse;
                };
                MsgData: {
                    encode(message: _13.MsgData, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _13.MsgData;
                    fromJSON(object: any): _13.MsgData;
                    toJSON(message: _13.MsgData): unknown;
                    fromPartial(object: Partial<_13.MsgData>): _13.MsgData;
                };
                TxMsgData: {
                    encode(message: _13.TxMsgData, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _13.TxMsgData;
                    fromJSON(object: any): _13.TxMsgData;
                    toJSON(message: _13.TxMsgData): unknown;
                    fromPartial(object: Partial<_13.TxMsgData>): _13.TxMsgData;
                };
                SearchTxsResult: {
                    encode(message: _13.SearchTxsResult, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _13.SearchTxsResult;
                    fromJSON(object: any): _13.SearchTxsResult;
                    toJSON(message: _13.SearchTxsResult): unknown;
                    fromPartial(object: Partial<_13.SearchTxsResult>): _13.SearchTxsResult;
                };
            };
        }
        namespace query {
            const v1beta1: {
                PageRequest: {
                    encode(message: _14.PageRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _14.PageRequest;
                    fromJSON(object: any): _14.PageRequest;
                    toJSON(message: _14.PageRequest): unknown;
                    fromPartial(object: Partial<_14.PageRequest>): _14.PageRequest;
                };
                PageResponse: {
                    encode(message: _14.PageResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _14.PageResponse;
                    fromJSON(object: any): _14.PageResponse;
                    toJSON(message: _14.PageResponse): unknown;
                    fromPartial(object: Partial<_14.PageResponse>): _14.PageResponse;
                };
            };
        }
        const v1beta1: {
            Coin: {
                encode(message: _15.Coin, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _15.Coin;
                fromJSON(object: any): _15.Coin;
                toJSON(message: _15.Coin): unknown;
                fromPartial(object: Partial<_15.Coin>): _15.Coin;
            };
            DecCoin: {
                encode(message: _15.DecCoin, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _15.DecCoin;
                fromJSON(object: any): _15.DecCoin;
                toJSON(message: _15.DecCoin): unknown;
                fromPartial(object: Partial<_15.DecCoin>): _15.DecCoin;
            };
            IntProto: {
                encode(message: _15.IntProto, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _15.IntProto;
                fromJSON(object: any): _15.IntProto;
                toJSON(message: _15.IntProto): unknown;
                fromPartial(object: Partial<_15.IntProto>): _15.IntProto;
            };
            DecProto: {
                encode(message: _15.DecProto, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _15.DecProto;
                fromJSON(object: any): _15.DecProto;
                toJSON(message: _15.DecProto): unknown;
                fromPartial(object: Partial<_15.DecProto>): _15.DecProto;
            };
        };
    }
    namespace crypto {
        const ed25519: {
            PubKey: {
                encode(message: _16.PubKey, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _16.PubKey;
                fromJSON(object: any): _16.PubKey;
                toJSON(message: _16.PubKey): unknown;
                fromPartial(object: Partial<_16.PubKey>): _16.PubKey;
            };
            PrivKey: {
                encode(message: _16.PrivKey, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _16.PrivKey;
                fromJSON(object: any): _16.PrivKey;
                toJSON(message: _16.PrivKey): unknown;
                fromPartial(object: Partial<_16.PrivKey>): _16.PrivKey;
            };
        };
        const multisig: {
            LegacyAminoPubKey: {
                encode(message: _17.LegacyAminoPubKey, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _17.LegacyAminoPubKey;
                fromJSON(object: any): _17.LegacyAminoPubKey;
                toJSON(message: _17.LegacyAminoPubKey): unknown;
                fromPartial(object: Partial<_17.LegacyAminoPubKey>): _17.LegacyAminoPubKey;
            };
        };
        const secp256k1: {
            PubKey: {
                encode(message: _18.PubKey, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _18.PubKey;
                fromJSON(object: any): _18.PubKey;
                toJSON(message: _18.PubKey): unknown;
                fromPartial(object: Partial<_18.PubKey>): _18.PubKey;
            };
            PrivKey: {
                encode(message: _18.PrivKey, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _18.PrivKey;
                fromJSON(object: any): _18.PrivKey;
                toJSON(message: _18.PrivKey): unknown;
                fromPartial(object: Partial<_18.PrivKey>): _18.PrivKey;
            };
        };
    }
    namespace tx {
        namespace signing {
            const v1beta1: {
                signModeFromJSON(object: any): _19.SignMode;
                signModeToJSON(object: _19.SignMode): string;
                SignMode: typeof _19.SignMode;
                SignatureDescriptors: {
                    encode(message: _19.SignatureDescriptors, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _19.SignatureDescriptors;
                    fromJSON(object: any): _19.SignatureDescriptors;
                    toJSON(message: _19.SignatureDescriptors): unknown;
                    fromPartial(object: Partial<_19.SignatureDescriptors>): _19.SignatureDescriptors;
                };
                SignatureDescriptor: {
                    encode(message: _19.SignatureDescriptor, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _19.SignatureDescriptor;
                    fromJSON(object: any): _19.SignatureDescriptor;
                    toJSON(message: _19.SignatureDescriptor): unknown;
                    fromPartial(object: Partial<_19.SignatureDescriptor>): _19.SignatureDescriptor;
                };
                SignatureDescriptor_Data: {
                    encode(message: _19.SignatureDescriptor_Data, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _19.SignatureDescriptor_Data;
                    fromJSON(object: any): _19.SignatureDescriptor_Data;
                    toJSON(message: _19.SignatureDescriptor_Data): unknown;
                    fromPartial(object: Partial<_19.SignatureDescriptor_Data>): _19.SignatureDescriptor_Data;
                };
                SignatureDescriptor_Data_Single: {
                    encode(message: _19.SignatureDescriptor_Data_Single, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _19.SignatureDescriptor_Data_Single;
                    fromJSON(object: any): _19.SignatureDescriptor_Data_Single;
                    toJSON(message: _19.SignatureDescriptor_Data_Single): unknown;
                    fromPartial(object: Partial<_19.SignatureDescriptor_Data_Single>): _19.SignatureDescriptor_Data_Single;
                };
                SignatureDescriptor_Data_Multi: {
                    encode(message: _19.SignatureDescriptor_Data_Multi, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _19.SignatureDescriptor_Data_Multi;
                    fromJSON(object: any): _19.SignatureDescriptor_Data_Multi;
                    toJSON(message: _19.SignatureDescriptor_Data_Multi): unknown;
                    fromPartial(object: Partial<_19.SignatureDescriptor_Data_Multi>): _19.SignatureDescriptor_Data_Multi;
                };
            };
        }
        const v1beta1: {
            ServiceClientImpl: typeof _66.ServiceClientImpl;
            createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                simulate(request: _20.SimulateRequest): Promise<_20.SimulateResponse>;
                getTx(request: _20.GetTxRequest): Promise<_20.GetTxResponse>;
                broadcastTx(request: _20.BroadcastTxRequest): Promise<_20.BroadcastTxResponse>;
                getTxsEvent(request: _20.GetTxsEventRequest): Promise<_20.GetTxsEventResponse>;
            };
            Tx: {
                encode(message: _21.Tx, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _21.Tx;
                fromJSON(object: any): _21.Tx;
                toJSON(message: _21.Tx): unknown;
                fromPartial(object: Partial<_21.Tx>): _21.Tx;
            };
            TxRaw: {
                encode(message: _21.TxRaw, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _21.TxRaw;
                fromJSON(object: any): _21.TxRaw;
                toJSON(message: _21.TxRaw): unknown;
                fromPartial(object: Partial<_21.TxRaw>): _21.TxRaw;
            };
            SignDoc: {
                encode(message: _21.SignDoc, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _21.SignDoc;
                fromJSON(object: any): _21.SignDoc;
                toJSON(message: _21.SignDoc): unknown;
                fromPartial(object: Partial<_21.SignDoc>): _21.SignDoc;
            };
            TxBody: {
                encode(message: _21.TxBody, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _21.TxBody;
                fromJSON(object: any): _21.TxBody;
                toJSON(message: _21.TxBody): unknown;
                fromPartial(object: Partial<_21.TxBody>): _21.TxBody;
            };
            AuthInfo: {
                encode(message: _21.AuthInfo, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _21.AuthInfo;
                fromJSON(object: any): _21.AuthInfo;
                toJSON(message: _21.AuthInfo): unknown;
                fromPartial(object: Partial<_21.AuthInfo>): _21.AuthInfo;
            };
            SignerInfo: {
                encode(message: _21.SignerInfo, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _21.SignerInfo;
                fromJSON(object: any): _21.SignerInfo;
                toJSON(message: _21.SignerInfo): unknown;
                fromPartial(object: Partial<_21.SignerInfo>): _21.SignerInfo;
            };
            ModeInfo: {
                encode(message: _21.ModeInfo, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _21.ModeInfo;
                fromJSON(object: any): _21.ModeInfo;
                toJSON(message: _21.ModeInfo): unknown;
                fromPartial(object: Partial<_21.ModeInfo>): _21.ModeInfo;
            };
            ModeInfo_Single: {
                encode(message: _21.ModeInfo_Single, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _21.ModeInfo_Single;
                fromJSON(object: any): _21.ModeInfo_Single;
                toJSON(message: _21.ModeInfo_Single): unknown;
                fromPartial(object: Partial<_21.ModeInfo_Single>): _21.ModeInfo_Single;
            };
            ModeInfo_Multi: {
                encode(message: _21.ModeInfo_Multi, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _21.ModeInfo_Multi;
                fromJSON(object: any): _21.ModeInfo_Multi;
                toJSON(message: _21.ModeInfo_Multi): unknown;
                fromPartial(object: Partial<_21.ModeInfo_Multi>): _21.ModeInfo_Multi;
            };
            Fee: {
                encode(message: _21.Fee, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _21.Fee;
                fromJSON(object: any): _21.Fee;
                toJSON(message: _21.Fee): unknown;
                fromPartial(object: Partial<_21.Fee>): _21.Fee;
            };
            broadcastModeFromJSON(object: any): _20.BroadcastMode;
            broadcastModeToJSON(object: _20.BroadcastMode): string;
            BroadcastMode: typeof _20.BroadcastMode;
            GetTxsEventRequest: {
                encode(message: _20.GetTxsEventRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _20.GetTxsEventRequest;
                fromJSON(object: any): _20.GetTxsEventRequest;
                toJSON(message: _20.GetTxsEventRequest): unknown;
                fromPartial(object: Partial<_20.GetTxsEventRequest>): _20.GetTxsEventRequest;
            };
            GetTxsEventResponse: {
                encode(message: _20.GetTxsEventResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _20.GetTxsEventResponse;
                fromJSON(object: any): _20.GetTxsEventResponse;
                toJSON(message: _20.GetTxsEventResponse): unknown;
                fromPartial(object: Partial<_20.GetTxsEventResponse>): _20.GetTxsEventResponse;
            };
            BroadcastTxRequest: {
                encode(message: _20.BroadcastTxRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _20.BroadcastTxRequest;
                fromJSON(object: any): _20.BroadcastTxRequest;
                toJSON(message: _20.BroadcastTxRequest): unknown;
                fromPartial(object: Partial<_20.BroadcastTxRequest>): _20.BroadcastTxRequest;
            };
            BroadcastTxResponse: {
                encode(message: _20.BroadcastTxResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _20.BroadcastTxResponse;
                fromJSON(object: any): _20.BroadcastTxResponse;
                toJSON(message: _20.BroadcastTxResponse): unknown;
                fromPartial(object: Partial<_20.BroadcastTxResponse>): _20.BroadcastTxResponse;
            };
            SimulateRequest: {
                encode(message: _20.SimulateRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _20.SimulateRequest;
                fromJSON(object: any): _20.SimulateRequest;
                toJSON(message: _20.SimulateRequest): unknown;
                fromPartial(object: Partial<_20.SimulateRequest>): _20.SimulateRequest;
            };
            SimulateResponse: {
                encode(message: _20.SimulateResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _20.SimulateResponse;
                fromJSON(object: any): _20.SimulateResponse;
                toJSON(message: _20.SimulateResponse): unknown;
                fromPartial(object: Partial<_20.SimulateResponse>): _20.SimulateResponse;
            };
            GetTxRequest: {
                encode(message: _20.GetTxRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _20.GetTxRequest;
                fromJSON(object: any): _20.GetTxRequest;
                toJSON(message: _20.GetTxRequest): unknown;
                fromPartial(object: Partial<_20.GetTxRequest>): _20.GetTxRequest;
            };
            GetTxResponse: {
                encode(message: _20.GetTxResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _20.GetTxResponse;
                fromJSON(object: any): _20.GetTxResponse;
                toJSON(message: _20.GetTxResponse): unknown;
                fromPartial(object: Partial<_20.GetTxResponse>): _20.GetTxResponse;
            };
        };
    }
}
