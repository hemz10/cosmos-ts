import * as _27 from "./applications/transfer/v1/genesis";
import * as _28 from "./applications/transfer/v1/query";
import * as _29 from "./applications/transfer/v1/transfer";
import * as _30 from "./applications/transfer/v1/tx";
import * as _31 from "./core/channel/v1/channel";
import * as _32 from "./core/channel/v1/genesis";
import * as _33 from "./core/channel/v1/query";
import * as _34 from "./core/channel/v1/tx";
import * as _35 from "./core/client/v1/client";
import * as _36 from "./core/client/v1/genesis";
import * as _37 from "./core/client/v1/query";
import * as _38 from "./core/client/v1/tx";
import * as _39 from "./core/commitment/v1/commitment";
import * as _40 from "./core/connection/v1/connection";
import * as _41 from "./core/connection/v1/genesis";
import * as _42 from "./core/connection/v1/query";
import * as _43 from "./core/connection/v1/tx";
import * as _44 from "./lightclients/localhost/v1/localhost";
import * as _45 from "./lightclients/solomachine/v1/solomachine";
import * as _46 from "./lightclients/tendermint/v1/tendermint";
import * as _76 from "./applications/transfer/v1/query.rpc.Query";
import * as _77 from "./core/channel/v1/query.rpc.Query";
import * as _78 from "./core/client/v1/query.rpc.Query";
import * as _79 from "./core/connection/v1/query.rpc.Query";
import * as _80 from "./applications/transfer/v1/tx.rpc.msg";
import * as _81 from "./core/channel/v1/tx.rpc.msg";
import * as _82 from "./core/client/v1/tx.rpc.msg";
import * as _83 from "./core/connection/v1/tx.rpc.msg";
export declare namespace ibc {
    namespace applications {
        namespace transfer {
            const v1: {
                MsgClientImpl: typeof _80.MsgClientImpl;
                QueryClientImpl: typeof _76.QueryClientImpl;
                createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                    denomTrace(request: _28.QueryDenomTraceRequest): Promise<_28.QueryDenomTraceResponse>;
                    denomTraces(request?: _28.QueryDenomTracesRequest): Promise<_28.QueryDenomTracesResponse>;
                    params(request?: _28.QueryParamsRequest): Promise<_28.QueryParamsResponse>;
                };
                registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
                load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
                MessageComposer: {
                    encoded: {
                        transfer(value: _30.MsgTransfer): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                    };
                    withTypeUrl: {
                        transfer(value: _30.MsgTransfer): {
                            typeUrl: string;
                            value: _30.MsgTransfer;
                        };
                    };
                    toJSON: {
                        transfer(value: _30.MsgTransfer): {
                            typeUrl: string;
                            value: unknown;
                        };
                    };
                    fromJSON: {
                        transfer(value: any): {
                            typeUrl: string;
                            value: _30.MsgTransfer;
                        };
                    };
                    fromPartial: {
                        transfer(value: _30.MsgTransfer): {
                            typeUrl: string;
                            value: _30.MsgTransfer;
                        };
                    };
                };
                AminoConverter: {
                    "/ibc.applications.transfer.v1.MsgTransfer": {
                        aminoType: string;
                        toAmino: ({ sourcePort, sourceChannel, token, sender, receiver, timeoutHeight, timeoutTimestamp }: _30.MsgTransfer) => {
                            source_port: string;
                            source_channel: string;
                            token: {
                                denom: string;
                                amount: string;
                            };
                            sender: string;
                            receiver: string;
                            timeout_height: import("../helpers").AminoHeight;
                            timeout_timestamp: string;
                        };
                        fromAmino: ({ source_port, source_channel, token, sender, receiver, timeout_height, timeout_timestamp }: {
                            source_port: string;
                            source_channel: string;
                            token: {
                                denom: string;
                                amount: string;
                            };
                            sender: string;
                            receiver: string;
                            timeout_height: import("../helpers").AminoHeight;
                            timeout_timestamp: string;
                        }) => _30.MsgTransfer;
                    };
                };
                MsgTransfer: {
                    encode(message: _30.MsgTransfer, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _30.MsgTransfer;
                    fromJSON(object: any): _30.MsgTransfer;
                    toJSON(message: _30.MsgTransfer): unknown;
                    fromPartial(object: Partial<_30.MsgTransfer>): _30.MsgTransfer;
                };
                MsgTransferResponse: {
                    encode(_: _30.MsgTransferResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _30.MsgTransferResponse;
                    fromJSON(_: any): _30.MsgTransferResponse;
                    toJSON(_: _30.MsgTransferResponse): unknown;
                    fromPartial(_: Partial<_30.MsgTransferResponse>): _30.MsgTransferResponse;
                };
                FungibleTokenPacketData: {
                    encode(message: _29.FungibleTokenPacketData, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _29.FungibleTokenPacketData;
                    fromJSON(object: any): _29.FungibleTokenPacketData;
                    toJSON(message: _29.FungibleTokenPacketData): unknown;
                    fromPartial(object: Partial<_29.FungibleTokenPacketData>): _29.FungibleTokenPacketData;
                };
                DenomTrace: {
                    encode(message: _29.DenomTrace, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _29.DenomTrace;
                    fromJSON(object: any): _29.DenomTrace;
                    toJSON(message: _29.DenomTrace): unknown;
                    fromPartial(object: Partial<_29.DenomTrace>): _29.DenomTrace;
                };
                Params: {
                    encode(message: _29.Params, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _29.Params;
                    fromJSON(object: any): _29.Params;
                    toJSON(message: _29.Params): unknown;
                    fromPartial(object: Partial<_29.Params>): _29.Params;
                };
                QueryDenomTraceRequest: {
                    encode(message: _28.QueryDenomTraceRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _28.QueryDenomTraceRequest;
                    fromJSON(object: any): _28.QueryDenomTraceRequest;
                    toJSON(message: _28.QueryDenomTraceRequest): unknown;
                    fromPartial(object: Partial<_28.QueryDenomTraceRequest>): _28.QueryDenomTraceRequest;
                };
                QueryDenomTraceResponse: {
                    encode(message: _28.QueryDenomTraceResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _28.QueryDenomTraceResponse;
                    fromJSON(object: any): _28.QueryDenomTraceResponse;
                    toJSON(message: _28.QueryDenomTraceResponse): unknown;
                    fromPartial(object: Partial<_28.QueryDenomTraceResponse>): _28.QueryDenomTraceResponse;
                };
                QueryDenomTracesRequest: {
                    encode(message: _28.QueryDenomTracesRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _28.QueryDenomTracesRequest;
                    fromJSON(object: any): _28.QueryDenomTracesRequest;
                    toJSON(message: _28.QueryDenomTracesRequest): unknown;
                    fromPartial(object: Partial<_28.QueryDenomTracesRequest>): _28.QueryDenomTracesRequest;
                };
                QueryDenomTracesResponse: {
                    encode(message: _28.QueryDenomTracesResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _28.QueryDenomTracesResponse;
                    fromJSON(object: any): _28.QueryDenomTracesResponse;
                    toJSON(message: _28.QueryDenomTracesResponse): unknown;
                    fromPartial(object: Partial<_28.QueryDenomTracesResponse>): _28.QueryDenomTracesResponse;
                };
                QueryParamsRequest: {
                    encode(_: _28.QueryParamsRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _28.QueryParamsRequest;
                    fromJSON(_: any): _28.QueryParamsRequest;
                    toJSON(_: _28.QueryParamsRequest): unknown;
                    fromPartial(_: Partial<_28.QueryParamsRequest>): _28.QueryParamsRequest;
                };
                QueryParamsResponse: {
                    encode(message: _28.QueryParamsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _28.QueryParamsResponse;
                    fromJSON(object: any): _28.QueryParamsResponse;
                    toJSON(message: _28.QueryParamsResponse): unknown;
                    fromPartial(object: Partial<_28.QueryParamsResponse>): _28.QueryParamsResponse;
                };
                GenesisState: {
                    encode(message: _27.GenesisState, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _27.GenesisState;
                    fromJSON(object: any): _27.GenesisState;
                    toJSON(message: _27.GenesisState): unknown;
                    fromPartial(object: Partial<_27.GenesisState>): _27.GenesisState;
                };
            };
        }
    }
    namespace core {
        namespace channel {
            const v1: {
                MsgClientImpl: typeof _81.MsgClientImpl;
                QueryClientImpl: typeof _77.QueryClientImpl;
                createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                    channel(request: _33.QueryChannelRequest): Promise<_33.QueryChannelResponse>;
                    channels(request?: _33.QueryChannelsRequest): Promise<_33.QueryChannelsResponse>;
                    connectionChannels(request: _33.QueryConnectionChannelsRequest): Promise<_33.QueryConnectionChannelsResponse>;
                    channelClientState(request: _33.QueryChannelClientStateRequest): Promise<_33.QueryChannelClientStateResponse>;
                    channelConsensusState(request: _33.QueryChannelConsensusStateRequest): Promise<_33.QueryChannelConsensusStateResponse>;
                    packetCommitment(request: _33.QueryPacketCommitmentRequest): Promise<_33.QueryPacketCommitmentResponse>;
                    packetCommitments(request: _33.QueryPacketCommitmentsRequest): Promise<_33.QueryPacketCommitmentsResponse>;
                    packetReceipt(request: _33.QueryPacketReceiptRequest): Promise<_33.QueryPacketReceiptResponse>;
                    packetAcknowledgement(request: _33.QueryPacketAcknowledgementRequest): Promise<_33.QueryPacketAcknowledgementResponse>;
                    packetAcknowledgements(request: _33.QueryPacketAcknowledgementsRequest): Promise<_33.QueryPacketAcknowledgementsResponse>;
                    unreceivedPackets(request: _33.QueryUnreceivedPacketsRequest): Promise<_33.QueryUnreceivedPacketsResponse>;
                    unreceivedAcks(request: _33.QueryUnreceivedAcksRequest): Promise<_33.QueryUnreceivedAcksResponse>;
                    nextSequenceReceive(request: _33.QueryNextSequenceReceiveRequest): Promise<_33.QueryNextSequenceReceiveResponse>;
                };
                registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
                load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
                MessageComposer: {
                    encoded: {
                        channelOpenInit(value: _34.MsgChannelOpenInit): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        channelOpenTry(value: _34.MsgChannelOpenTry): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        channelOpenAck(value: _34.MsgChannelOpenAck): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        channelOpenConfirm(value: _34.MsgChannelOpenConfirm): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        channelCloseInit(value: _34.MsgChannelCloseInit): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        channelCloseConfirm(value: _34.MsgChannelCloseConfirm): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        recvPacket(value: _34.MsgRecvPacket): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        timeout(value: _34.MsgTimeout): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        timeoutOnClose(value: _34.MsgTimeoutOnClose): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        acknowledgement(value: _34.MsgAcknowledgement): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                    };
                    withTypeUrl: {
                        channelOpenInit(value: _34.MsgChannelOpenInit): {
                            typeUrl: string;
                            value: _34.MsgChannelOpenInit;
                        };
                        channelOpenTry(value: _34.MsgChannelOpenTry): {
                            typeUrl: string;
                            value: _34.MsgChannelOpenTry;
                        };
                        channelOpenAck(value: _34.MsgChannelOpenAck): {
                            typeUrl: string;
                            value: _34.MsgChannelOpenAck;
                        };
                        channelOpenConfirm(value: _34.MsgChannelOpenConfirm): {
                            typeUrl: string;
                            value: _34.MsgChannelOpenConfirm;
                        };
                        channelCloseInit(value: _34.MsgChannelCloseInit): {
                            typeUrl: string;
                            value: _34.MsgChannelCloseInit;
                        };
                        channelCloseConfirm(value: _34.MsgChannelCloseConfirm): {
                            typeUrl: string;
                            value: _34.MsgChannelCloseConfirm;
                        };
                        recvPacket(value: _34.MsgRecvPacket): {
                            typeUrl: string;
                            value: _34.MsgRecvPacket;
                        };
                        timeout(value: _34.MsgTimeout): {
                            typeUrl: string;
                            value: _34.MsgTimeout;
                        };
                        timeoutOnClose(value: _34.MsgTimeoutOnClose): {
                            typeUrl: string;
                            value: _34.MsgTimeoutOnClose;
                        };
                        acknowledgement(value: _34.MsgAcknowledgement): {
                            typeUrl: string;
                            value: _34.MsgAcknowledgement;
                        };
                    };
                    toJSON: {
                        channelOpenInit(value: _34.MsgChannelOpenInit): {
                            typeUrl: string;
                            value: unknown;
                        };
                        channelOpenTry(value: _34.MsgChannelOpenTry): {
                            typeUrl: string;
                            value: unknown;
                        };
                        channelOpenAck(value: _34.MsgChannelOpenAck): {
                            typeUrl: string;
                            value: unknown;
                        };
                        channelOpenConfirm(value: _34.MsgChannelOpenConfirm): {
                            typeUrl: string;
                            value: unknown;
                        };
                        channelCloseInit(value: _34.MsgChannelCloseInit): {
                            typeUrl: string;
                            value: unknown;
                        };
                        channelCloseConfirm(value: _34.MsgChannelCloseConfirm): {
                            typeUrl: string;
                            value: unknown;
                        };
                        recvPacket(value: _34.MsgRecvPacket): {
                            typeUrl: string;
                            value: unknown;
                        };
                        timeout(value: _34.MsgTimeout): {
                            typeUrl: string;
                            value: unknown;
                        };
                        timeoutOnClose(value: _34.MsgTimeoutOnClose): {
                            typeUrl: string;
                            value: unknown;
                        };
                        acknowledgement(value: _34.MsgAcknowledgement): {
                            typeUrl: string;
                            value: unknown;
                        };
                    };
                    fromJSON: {
                        channelOpenInit(value: any): {
                            typeUrl: string;
                            value: _34.MsgChannelOpenInit;
                        };
                        channelOpenTry(value: any): {
                            typeUrl: string;
                            value: _34.MsgChannelOpenTry;
                        };
                        channelOpenAck(value: any): {
                            typeUrl: string;
                            value: _34.MsgChannelOpenAck;
                        };
                        channelOpenConfirm(value: any): {
                            typeUrl: string;
                            value: _34.MsgChannelOpenConfirm;
                        };
                        channelCloseInit(value: any): {
                            typeUrl: string;
                            value: _34.MsgChannelCloseInit;
                        };
                        channelCloseConfirm(value: any): {
                            typeUrl: string;
                            value: _34.MsgChannelCloseConfirm;
                        };
                        recvPacket(value: any): {
                            typeUrl: string;
                            value: _34.MsgRecvPacket;
                        };
                        timeout(value: any): {
                            typeUrl: string;
                            value: _34.MsgTimeout;
                        };
                        timeoutOnClose(value: any): {
                            typeUrl: string;
                            value: _34.MsgTimeoutOnClose;
                        };
                        acknowledgement(value: any): {
                            typeUrl: string;
                            value: _34.MsgAcknowledgement;
                        };
                    };
                    fromPartial: {
                        channelOpenInit(value: _34.MsgChannelOpenInit): {
                            typeUrl: string;
                            value: _34.MsgChannelOpenInit;
                        };
                        channelOpenTry(value: _34.MsgChannelOpenTry): {
                            typeUrl: string;
                            value: _34.MsgChannelOpenTry;
                        };
                        channelOpenAck(value: _34.MsgChannelOpenAck): {
                            typeUrl: string;
                            value: _34.MsgChannelOpenAck;
                        };
                        channelOpenConfirm(value: _34.MsgChannelOpenConfirm): {
                            typeUrl: string;
                            value: _34.MsgChannelOpenConfirm;
                        };
                        channelCloseInit(value: _34.MsgChannelCloseInit): {
                            typeUrl: string;
                            value: _34.MsgChannelCloseInit;
                        };
                        channelCloseConfirm(value: _34.MsgChannelCloseConfirm): {
                            typeUrl: string;
                            value: _34.MsgChannelCloseConfirm;
                        };
                        recvPacket(value: _34.MsgRecvPacket): {
                            typeUrl: string;
                            value: _34.MsgRecvPacket;
                        };
                        timeout(value: _34.MsgTimeout): {
                            typeUrl: string;
                            value: _34.MsgTimeout;
                        };
                        timeoutOnClose(value: _34.MsgTimeoutOnClose): {
                            typeUrl: string;
                            value: _34.MsgTimeoutOnClose;
                        };
                        acknowledgement(value: _34.MsgAcknowledgement): {
                            typeUrl: string;
                            value: _34.MsgAcknowledgement;
                        };
                    };
                };
                AminoConverter: {
                    "/ibc.core.channel.v1.MsgChannelOpenInit": {
                        aminoType: string;
                        toAmino: ({ portId, channel, signer }: _34.MsgChannelOpenInit) => {
                            port_id: string;
                            channel: {
                                state: number;
                                ordering: number;
                                counterparty: {
                                    port_id: string;
                                    channel_id: string;
                                };
                                connection_hops: string[];
                                version: string;
                            };
                            signer: string;
                        };
                        fromAmino: ({ port_id, channel, signer }: {
                            port_id: string;
                            channel: {
                                state: number;
                                ordering: number;
                                counterparty: {
                                    port_id: string;
                                    channel_id: string;
                                };
                                connection_hops: string[];
                                version: string;
                            };
                            signer: string;
                        }) => _34.MsgChannelOpenInit;
                    };
                    "/ibc.core.channel.v1.MsgChannelOpenTry": {
                        aminoType: string;
                        toAmino: ({ portId, previousChannelId, channel, counterpartyVersion, proofInit, proofHeight, signer }: _34.MsgChannelOpenTry) => {
                            port_id: string;
                            previous_channel_id: string;
                            channel: {
                                state: number;
                                ordering: number;
                                counterparty: {
                                    port_id: string;
                                    channel_id: string;
                                };
                                connection_hops: string[];
                                version: string;
                            };
                            counterparty_version: string;
                            proof_init: Uint8Array;
                            proof_height: import("../helpers").AminoHeight;
                            signer: string;
                        };
                        fromAmino: ({ port_id, previous_channel_id, channel, counterparty_version, proof_init, proof_height, signer }: {
                            port_id: string;
                            previous_channel_id: string;
                            channel: {
                                state: number;
                                ordering: number;
                                counterparty: {
                                    port_id: string;
                                    channel_id: string;
                                };
                                connection_hops: string[];
                                version: string;
                            };
                            counterparty_version: string;
                            proof_init: Uint8Array;
                            proof_height: import("../helpers").AminoHeight;
                            signer: string;
                        }) => _34.MsgChannelOpenTry;
                    };
                    "/ibc.core.channel.v1.MsgChannelOpenAck": {
                        aminoType: string;
                        toAmino: ({ portId, channelId, counterpartyChannelId, counterpartyVersion, proofTry, proofHeight, signer }: _34.MsgChannelOpenAck) => {
                            port_id: string;
                            channel_id: string;
                            counterparty_channel_id: string;
                            counterparty_version: string;
                            proof_try: Uint8Array;
                            proof_height: import("../helpers").AminoHeight;
                            signer: string;
                        };
                        fromAmino: ({ port_id, channel_id, counterparty_channel_id, counterparty_version, proof_try, proof_height, signer }: {
                            port_id: string;
                            channel_id: string;
                            counterparty_channel_id: string;
                            counterparty_version: string;
                            proof_try: Uint8Array;
                            proof_height: import("../helpers").AminoHeight;
                            signer: string;
                        }) => _34.MsgChannelOpenAck;
                    };
                    "/ibc.core.channel.v1.MsgChannelOpenConfirm": {
                        aminoType: string;
                        toAmino: ({ portId, channelId, proofAck, proofHeight, signer }: _34.MsgChannelOpenConfirm) => {
                            port_id: string;
                            channel_id: string;
                            proof_ack: Uint8Array;
                            proof_height: import("../helpers").AminoHeight;
                            signer: string;
                        };
                        fromAmino: ({ port_id, channel_id, proof_ack, proof_height, signer }: {
                            port_id: string;
                            channel_id: string;
                            proof_ack: Uint8Array;
                            proof_height: import("../helpers").AminoHeight;
                            signer: string;
                        }) => _34.MsgChannelOpenConfirm;
                    };
                    "/ibc.core.channel.v1.MsgChannelCloseInit": {
                        aminoType: string;
                        toAmino: ({ portId, channelId, signer }: _34.MsgChannelCloseInit) => {
                            port_id: string;
                            channel_id: string;
                            signer: string;
                        };
                        fromAmino: ({ port_id, channel_id, signer }: {
                            port_id: string;
                            channel_id: string;
                            signer: string;
                        }) => _34.MsgChannelCloseInit;
                    };
                    "/ibc.core.channel.v1.MsgChannelCloseConfirm": {
                        aminoType: string;
                        toAmino: ({ portId, channelId, proofInit, proofHeight, signer }: _34.MsgChannelCloseConfirm) => {
                            port_id: string;
                            channel_id: string;
                            proof_init: Uint8Array;
                            proof_height: import("../helpers").AminoHeight;
                            signer: string;
                        };
                        fromAmino: ({ port_id, channel_id, proof_init, proof_height, signer }: {
                            port_id: string;
                            channel_id: string;
                            proof_init: Uint8Array;
                            proof_height: import("../helpers").AminoHeight;
                            signer: string;
                        }) => _34.MsgChannelCloseConfirm;
                    };
                    "/ibc.core.channel.v1.MsgRecvPacket": {
                        aminoType: string;
                        toAmino: ({ packet, proofCommitment, proofHeight, signer }: _34.MsgRecvPacket) => {
                            packet: {
                                sequence: string;
                                source_port: string;
                                source_channel: string;
                                destination_port: string;
                                destination_channel: string;
                                data: Uint8Array;
                                timeout_height: import("../helpers").AminoHeight;
                                timeout_timestamp: string;
                            };
                            proof_commitment: Uint8Array;
                            proof_height: import("../helpers").AminoHeight;
                            signer: string;
                        };
                        fromAmino: ({ packet, proof_commitment, proof_height, signer }: {
                            packet: {
                                sequence: string;
                                source_port: string;
                                source_channel: string;
                                destination_port: string;
                                destination_channel: string;
                                data: Uint8Array;
                                timeout_height: import("../helpers").AminoHeight;
                                timeout_timestamp: string;
                            };
                            proof_commitment: Uint8Array;
                            proof_height: import("../helpers").AminoHeight;
                            signer: string;
                        }) => _34.MsgRecvPacket;
                    };
                    "/ibc.core.channel.v1.MsgTimeout": {
                        aminoType: string;
                        toAmino: ({ packet, proofUnreceived, proofHeight, nextSequenceRecv, signer }: _34.MsgTimeout) => {
                            packet: {
                                sequence: string;
                                source_port: string;
                                source_channel: string;
                                destination_port: string;
                                destination_channel: string;
                                data: Uint8Array;
                                timeout_height: import("../helpers").AminoHeight;
                                timeout_timestamp: string;
                            };
                            proof_unreceived: Uint8Array;
                            proof_height: import("../helpers").AminoHeight;
                            next_sequence_recv: string;
                            signer: string;
                        };
                        fromAmino: ({ packet, proof_unreceived, proof_height, next_sequence_recv, signer }: {
                            packet: {
                                sequence: string;
                                source_port: string;
                                source_channel: string;
                                destination_port: string;
                                destination_channel: string;
                                data: Uint8Array;
                                timeout_height: import("../helpers").AminoHeight;
                                timeout_timestamp: string;
                            };
                            proof_unreceived: Uint8Array;
                            proof_height: import("../helpers").AminoHeight;
                            next_sequence_recv: string;
                            signer: string;
                        }) => _34.MsgTimeout;
                    };
                    "/ibc.core.channel.v1.MsgTimeoutOnClose": {
                        aminoType: string;
                        toAmino: ({ packet, proofUnreceived, proofClose, proofHeight, nextSequenceRecv, signer }: _34.MsgTimeoutOnClose) => {
                            packet: {
                                sequence: string;
                                source_port: string;
                                source_channel: string;
                                destination_port: string;
                                destination_channel: string;
                                data: Uint8Array;
                                timeout_height: import("../helpers").AminoHeight;
                                timeout_timestamp: string;
                            };
                            proof_unreceived: Uint8Array;
                            proof_close: Uint8Array;
                            proof_height: import("../helpers").AminoHeight;
                            next_sequence_recv: string;
                            signer: string;
                        };
                        fromAmino: ({ packet, proof_unreceived, proof_close, proof_height, next_sequence_recv, signer }: {
                            packet: {
                                sequence: string;
                                source_port: string;
                                source_channel: string;
                                destination_port: string;
                                destination_channel: string;
                                data: Uint8Array;
                                timeout_height: import("../helpers").AminoHeight;
                                timeout_timestamp: string;
                            };
                            proof_unreceived: Uint8Array;
                            proof_close: Uint8Array;
                            proof_height: import("../helpers").AminoHeight;
                            next_sequence_recv: string;
                            signer: string;
                        }) => _34.MsgTimeoutOnClose;
                    };
                    "/ibc.core.channel.v1.MsgAcknowledgement": {
                        aminoType: string;
                        toAmino: ({ packet, acknowledgement, proofAcked, proofHeight, signer }: _34.MsgAcknowledgement) => {
                            packet: {
                                sequence: string;
                                source_port: string;
                                source_channel: string;
                                destination_port: string;
                                destination_channel: string;
                                data: Uint8Array;
                                timeout_height: import("../helpers").AminoHeight;
                                timeout_timestamp: string;
                            };
                            acknowledgement: Uint8Array;
                            proof_acked: Uint8Array;
                            proof_height: import("../helpers").AminoHeight;
                            signer: string;
                        };
                        fromAmino: ({ packet, acknowledgement, proof_acked, proof_height, signer }: {
                            packet: {
                                sequence: string;
                                source_port: string;
                                source_channel: string;
                                destination_port: string;
                                destination_channel: string;
                                data: Uint8Array;
                                timeout_height: import("../helpers").AminoHeight;
                                timeout_timestamp: string;
                            };
                            acknowledgement: Uint8Array;
                            proof_acked: Uint8Array;
                            proof_height: import("../helpers").AminoHeight;
                            signer: string;
                        }) => _34.MsgAcknowledgement;
                    };
                };
                MsgChannelOpenInit: {
                    encode(message: _34.MsgChannelOpenInit, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _34.MsgChannelOpenInit;
                    fromJSON(object: any): _34.MsgChannelOpenInit;
                    toJSON(message: _34.MsgChannelOpenInit): unknown;
                    fromPartial(object: Partial<_34.MsgChannelOpenInit>): _34.MsgChannelOpenInit;
                };
                MsgChannelOpenInitResponse: {
                    encode(_: _34.MsgChannelOpenInitResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _34.MsgChannelOpenInitResponse;
                    fromJSON(_: any): _34.MsgChannelOpenInitResponse;
                    toJSON(_: _34.MsgChannelOpenInitResponse): unknown;
                    fromPartial(_: Partial<_34.MsgChannelOpenInitResponse>): _34.MsgChannelOpenInitResponse;
                };
                MsgChannelOpenTry: {
                    encode(message: _34.MsgChannelOpenTry, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _34.MsgChannelOpenTry;
                    fromJSON(object: any): _34.MsgChannelOpenTry;
                    toJSON(message: _34.MsgChannelOpenTry): unknown;
                    fromPartial(object: Partial<_34.MsgChannelOpenTry>): _34.MsgChannelOpenTry;
                };
                MsgChannelOpenTryResponse: {
                    encode(_: _34.MsgChannelOpenTryResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _34.MsgChannelOpenTryResponse;
                    fromJSON(_: any): _34.MsgChannelOpenTryResponse;
                    toJSON(_: _34.MsgChannelOpenTryResponse): unknown;
                    fromPartial(_: Partial<_34.MsgChannelOpenTryResponse>): _34.MsgChannelOpenTryResponse;
                };
                MsgChannelOpenAck: {
                    encode(message: _34.MsgChannelOpenAck, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _34.MsgChannelOpenAck;
                    fromJSON(object: any): _34.MsgChannelOpenAck;
                    toJSON(message: _34.MsgChannelOpenAck): unknown;
                    fromPartial(object: Partial<_34.MsgChannelOpenAck>): _34.MsgChannelOpenAck;
                };
                MsgChannelOpenAckResponse: {
                    encode(_: _34.MsgChannelOpenAckResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _34.MsgChannelOpenAckResponse;
                    fromJSON(_: any): _34.MsgChannelOpenAckResponse;
                    toJSON(_: _34.MsgChannelOpenAckResponse): unknown;
                    fromPartial(_: Partial<_34.MsgChannelOpenAckResponse>): _34.MsgChannelOpenAckResponse;
                };
                MsgChannelOpenConfirm: {
                    encode(message: _34.MsgChannelOpenConfirm, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _34.MsgChannelOpenConfirm;
                    fromJSON(object: any): _34.MsgChannelOpenConfirm;
                    toJSON(message: _34.MsgChannelOpenConfirm): unknown;
                    fromPartial(object: Partial<_34.MsgChannelOpenConfirm>): _34.MsgChannelOpenConfirm;
                };
                MsgChannelOpenConfirmResponse: {
                    encode(_: _34.MsgChannelOpenConfirmResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _34.MsgChannelOpenConfirmResponse;
                    fromJSON(_: any): _34.MsgChannelOpenConfirmResponse;
                    toJSON(_: _34.MsgChannelOpenConfirmResponse): unknown;
                    fromPartial(_: Partial<_34.MsgChannelOpenConfirmResponse>): _34.MsgChannelOpenConfirmResponse;
                };
                MsgChannelCloseInit: {
                    encode(message: _34.MsgChannelCloseInit, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _34.MsgChannelCloseInit;
                    fromJSON(object: any): _34.MsgChannelCloseInit;
                    toJSON(message: _34.MsgChannelCloseInit): unknown;
                    fromPartial(object: Partial<_34.MsgChannelCloseInit>): _34.MsgChannelCloseInit;
                };
                MsgChannelCloseInitResponse: {
                    encode(_: _34.MsgChannelCloseInitResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _34.MsgChannelCloseInitResponse;
                    fromJSON(_: any): _34.MsgChannelCloseInitResponse;
                    toJSON(_: _34.MsgChannelCloseInitResponse): unknown;
                    fromPartial(_: Partial<_34.MsgChannelCloseInitResponse>): _34.MsgChannelCloseInitResponse;
                };
                MsgChannelCloseConfirm: {
                    encode(message: _34.MsgChannelCloseConfirm, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _34.MsgChannelCloseConfirm;
                    fromJSON(object: any): _34.MsgChannelCloseConfirm;
                    toJSON(message: _34.MsgChannelCloseConfirm): unknown;
                    fromPartial(object: Partial<_34.MsgChannelCloseConfirm>): _34.MsgChannelCloseConfirm;
                };
                MsgChannelCloseConfirmResponse: {
                    encode(_: _34.MsgChannelCloseConfirmResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _34.MsgChannelCloseConfirmResponse;
                    fromJSON(_: any): _34.MsgChannelCloseConfirmResponse;
                    toJSON(_: _34.MsgChannelCloseConfirmResponse): unknown;
                    fromPartial(_: Partial<_34.MsgChannelCloseConfirmResponse>): _34.MsgChannelCloseConfirmResponse;
                };
                MsgRecvPacket: {
                    encode(message: _34.MsgRecvPacket, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _34.MsgRecvPacket;
                    fromJSON(object: any): _34.MsgRecvPacket;
                    toJSON(message: _34.MsgRecvPacket): unknown;
                    fromPartial(object: Partial<_34.MsgRecvPacket>): _34.MsgRecvPacket;
                };
                MsgRecvPacketResponse: {
                    encode(_: _34.MsgRecvPacketResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _34.MsgRecvPacketResponse;
                    fromJSON(_: any): _34.MsgRecvPacketResponse;
                    toJSON(_: _34.MsgRecvPacketResponse): unknown;
                    fromPartial(_: Partial<_34.MsgRecvPacketResponse>): _34.MsgRecvPacketResponse;
                };
                MsgTimeout: {
                    encode(message: _34.MsgTimeout, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _34.MsgTimeout;
                    fromJSON(object: any): _34.MsgTimeout;
                    toJSON(message: _34.MsgTimeout): unknown;
                    fromPartial(object: Partial<_34.MsgTimeout>): _34.MsgTimeout;
                };
                MsgTimeoutResponse: {
                    encode(_: _34.MsgTimeoutResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _34.MsgTimeoutResponse;
                    fromJSON(_: any): _34.MsgTimeoutResponse;
                    toJSON(_: _34.MsgTimeoutResponse): unknown;
                    fromPartial(_: Partial<_34.MsgTimeoutResponse>): _34.MsgTimeoutResponse;
                };
                MsgTimeoutOnClose: {
                    encode(message: _34.MsgTimeoutOnClose, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _34.MsgTimeoutOnClose;
                    fromJSON(object: any): _34.MsgTimeoutOnClose;
                    toJSON(message: _34.MsgTimeoutOnClose): unknown;
                    fromPartial(object: Partial<_34.MsgTimeoutOnClose>): _34.MsgTimeoutOnClose;
                };
                MsgTimeoutOnCloseResponse: {
                    encode(_: _34.MsgTimeoutOnCloseResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _34.MsgTimeoutOnCloseResponse;
                    fromJSON(_: any): _34.MsgTimeoutOnCloseResponse;
                    toJSON(_: _34.MsgTimeoutOnCloseResponse): unknown;
                    fromPartial(_: Partial<_34.MsgTimeoutOnCloseResponse>): _34.MsgTimeoutOnCloseResponse;
                };
                MsgAcknowledgement: {
                    encode(message: _34.MsgAcknowledgement, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _34.MsgAcknowledgement;
                    fromJSON(object: any): _34.MsgAcknowledgement;
                    toJSON(message: _34.MsgAcknowledgement): unknown;
                    fromPartial(object: Partial<_34.MsgAcknowledgement>): _34.MsgAcknowledgement;
                };
                MsgAcknowledgementResponse: {
                    encode(_: _34.MsgAcknowledgementResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _34.MsgAcknowledgementResponse;
                    fromJSON(_: any): _34.MsgAcknowledgementResponse;
                    toJSON(_: _34.MsgAcknowledgementResponse): unknown;
                    fromPartial(_: Partial<_34.MsgAcknowledgementResponse>): _34.MsgAcknowledgementResponse;
                };
                QueryChannelRequest: {
                    encode(message: _33.QueryChannelRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _33.QueryChannelRequest;
                    fromJSON(object: any): _33.QueryChannelRequest;
                    toJSON(message: _33.QueryChannelRequest): unknown;
                    fromPartial(object: Partial<_33.QueryChannelRequest>): _33.QueryChannelRequest;
                };
                QueryChannelResponse: {
                    encode(message: _33.QueryChannelResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _33.QueryChannelResponse;
                    fromJSON(object: any): _33.QueryChannelResponse;
                    toJSON(message: _33.QueryChannelResponse): unknown;
                    fromPartial(object: Partial<_33.QueryChannelResponse>): _33.QueryChannelResponse;
                };
                QueryChannelsRequest: {
                    encode(message: _33.QueryChannelsRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _33.QueryChannelsRequest;
                    fromJSON(object: any): _33.QueryChannelsRequest;
                    toJSON(message: _33.QueryChannelsRequest): unknown;
                    fromPartial(object: Partial<_33.QueryChannelsRequest>): _33.QueryChannelsRequest;
                };
                QueryChannelsResponse: {
                    encode(message: _33.QueryChannelsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _33.QueryChannelsResponse;
                    fromJSON(object: any): _33.QueryChannelsResponse;
                    toJSON(message: _33.QueryChannelsResponse): unknown;
                    fromPartial(object: Partial<_33.QueryChannelsResponse>): _33.QueryChannelsResponse;
                };
                QueryConnectionChannelsRequest: {
                    encode(message: _33.QueryConnectionChannelsRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _33.QueryConnectionChannelsRequest;
                    fromJSON(object: any): _33.QueryConnectionChannelsRequest;
                    toJSON(message: _33.QueryConnectionChannelsRequest): unknown;
                    fromPartial(object: Partial<_33.QueryConnectionChannelsRequest>): _33.QueryConnectionChannelsRequest;
                };
                QueryConnectionChannelsResponse: {
                    encode(message: _33.QueryConnectionChannelsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _33.QueryConnectionChannelsResponse;
                    fromJSON(object: any): _33.QueryConnectionChannelsResponse;
                    toJSON(message: _33.QueryConnectionChannelsResponse): unknown;
                    fromPartial(object: Partial<_33.QueryConnectionChannelsResponse>): _33.QueryConnectionChannelsResponse;
                };
                QueryChannelClientStateRequest: {
                    encode(message: _33.QueryChannelClientStateRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _33.QueryChannelClientStateRequest;
                    fromJSON(object: any): _33.QueryChannelClientStateRequest;
                    toJSON(message: _33.QueryChannelClientStateRequest): unknown;
                    fromPartial(object: Partial<_33.QueryChannelClientStateRequest>): _33.QueryChannelClientStateRequest;
                };
                QueryChannelClientStateResponse: {
                    encode(message: _33.QueryChannelClientStateResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _33.QueryChannelClientStateResponse;
                    fromJSON(object: any): _33.QueryChannelClientStateResponse;
                    toJSON(message: _33.QueryChannelClientStateResponse): unknown;
                    fromPartial(object: Partial<_33.QueryChannelClientStateResponse>): _33.QueryChannelClientStateResponse;
                };
                QueryChannelConsensusStateRequest: {
                    encode(message: _33.QueryChannelConsensusStateRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _33.QueryChannelConsensusStateRequest;
                    fromJSON(object: any): _33.QueryChannelConsensusStateRequest;
                    toJSON(message: _33.QueryChannelConsensusStateRequest): unknown;
                    fromPartial(object: Partial<_33.QueryChannelConsensusStateRequest>): _33.QueryChannelConsensusStateRequest;
                };
                QueryChannelConsensusStateResponse: {
                    encode(message: _33.QueryChannelConsensusStateResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _33.QueryChannelConsensusStateResponse;
                    fromJSON(object: any): _33.QueryChannelConsensusStateResponse;
                    toJSON(message: _33.QueryChannelConsensusStateResponse): unknown;
                    fromPartial(object: Partial<_33.QueryChannelConsensusStateResponse>): _33.QueryChannelConsensusStateResponse;
                };
                QueryPacketCommitmentRequest: {
                    encode(message: _33.QueryPacketCommitmentRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _33.QueryPacketCommitmentRequest;
                    fromJSON(object: any): _33.QueryPacketCommitmentRequest;
                    toJSON(message: _33.QueryPacketCommitmentRequest): unknown;
                    fromPartial(object: Partial<_33.QueryPacketCommitmentRequest>): _33.QueryPacketCommitmentRequest;
                };
                QueryPacketCommitmentResponse: {
                    encode(message: _33.QueryPacketCommitmentResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _33.QueryPacketCommitmentResponse;
                    fromJSON(object: any): _33.QueryPacketCommitmentResponse;
                    toJSON(message: _33.QueryPacketCommitmentResponse): unknown;
                    fromPartial(object: Partial<_33.QueryPacketCommitmentResponse>): _33.QueryPacketCommitmentResponse;
                };
                QueryPacketCommitmentsRequest: {
                    encode(message: _33.QueryPacketCommitmentsRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _33.QueryPacketCommitmentsRequest;
                    fromJSON(object: any): _33.QueryPacketCommitmentsRequest;
                    toJSON(message: _33.QueryPacketCommitmentsRequest): unknown;
                    fromPartial(object: Partial<_33.QueryPacketCommitmentsRequest>): _33.QueryPacketCommitmentsRequest;
                };
                QueryPacketCommitmentsResponse: {
                    encode(message: _33.QueryPacketCommitmentsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _33.QueryPacketCommitmentsResponse;
                    fromJSON(object: any): _33.QueryPacketCommitmentsResponse;
                    toJSON(message: _33.QueryPacketCommitmentsResponse): unknown;
                    fromPartial(object: Partial<_33.QueryPacketCommitmentsResponse>): _33.QueryPacketCommitmentsResponse;
                };
                QueryPacketReceiptRequest: {
                    encode(message: _33.QueryPacketReceiptRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _33.QueryPacketReceiptRequest;
                    fromJSON(object: any): _33.QueryPacketReceiptRequest;
                    toJSON(message: _33.QueryPacketReceiptRequest): unknown;
                    fromPartial(object: Partial<_33.QueryPacketReceiptRequest>): _33.QueryPacketReceiptRequest;
                };
                QueryPacketReceiptResponse: {
                    encode(message: _33.QueryPacketReceiptResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _33.QueryPacketReceiptResponse;
                    fromJSON(object: any): _33.QueryPacketReceiptResponse;
                    toJSON(message: _33.QueryPacketReceiptResponse): unknown;
                    fromPartial(object: Partial<_33.QueryPacketReceiptResponse>): _33.QueryPacketReceiptResponse;
                };
                QueryPacketAcknowledgementRequest: {
                    encode(message: _33.QueryPacketAcknowledgementRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _33.QueryPacketAcknowledgementRequest;
                    fromJSON(object: any): _33.QueryPacketAcknowledgementRequest;
                    toJSON(message: _33.QueryPacketAcknowledgementRequest): unknown;
                    fromPartial(object: Partial<_33.QueryPacketAcknowledgementRequest>): _33.QueryPacketAcknowledgementRequest;
                };
                QueryPacketAcknowledgementResponse: {
                    encode(message: _33.QueryPacketAcknowledgementResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _33.QueryPacketAcknowledgementResponse;
                    fromJSON(object: any): _33.QueryPacketAcknowledgementResponse;
                    toJSON(message: _33.QueryPacketAcknowledgementResponse): unknown;
                    fromPartial(object: Partial<_33.QueryPacketAcknowledgementResponse>): _33.QueryPacketAcknowledgementResponse;
                };
                QueryPacketAcknowledgementsRequest: {
                    encode(message: _33.QueryPacketAcknowledgementsRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _33.QueryPacketAcknowledgementsRequest;
                    fromJSON(object: any): _33.QueryPacketAcknowledgementsRequest;
                    toJSON(message: _33.QueryPacketAcknowledgementsRequest): unknown;
                    fromPartial(object: Partial<_33.QueryPacketAcknowledgementsRequest>): _33.QueryPacketAcknowledgementsRequest;
                };
                QueryPacketAcknowledgementsResponse: {
                    encode(message: _33.QueryPacketAcknowledgementsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _33.QueryPacketAcknowledgementsResponse;
                    fromJSON(object: any): _33.QueryPacketAcknowledgementsResponse;
                    toJSON(message: _33.QueryPacketAcknowledgementsResponse): unknown;
                    fromPartial(object: Partial<_33.QueryPacketAcknowledgementsResponse>): _33.QueryPacketAcknowledgementsResponse;
                };
                QueryUnreceivedPacketsRequest: {
                    encode(message: _33.QueryUnreceivedPacketsRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _33.QueryUnreceivedPacketsRequest;
                    fromJSON(object: any): _33.QueryUnreceivedPacketsRequest;
                    toJSON(message: _33.QueryUnreceivedPacketsRequest): unknown;
                    fromPartial(object: Partial<_33.QueryUnreceivedPacketsRequest>): _33.QueryUnreceivedPacketsRequest;
                };
                QueryUnreceivedPacketsResponse: {
                    encode(message: _33.QueryUnreceivedPacketsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _33.QueryUnreceivedPacketsResponse;
                    fromJSON(object: any): _33.QueryUnreceivedPacketsResponse;
                    toJSON(message: _33.QueryUnreceivedPacketsResponse): unknown;
                    fromPartial(object: Partial<_33.QueryUnreceivedPacketsResponse>): _33.QueryUnreceivedPacketsResponse;
                };
                QueryUnreceivedAcksRequest: {
                    encode(message: _33.QueryUnreceivedAcksRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _33.QueryUnreceivedAcksRequest;
                    fromJSON(object: any): _33.QueryUnreceivedAcksRequest;
                    toJSON(message: _33.QueryUnreceivedAcksRequest): unknown;
                    fromPartial(object: Partial<_33.QueryUnreceivedAcksRequest>): _33.QueryUnreceivedAcksRequest;
                };
                QueryUnreceivedAcksResponse: {
                    encode(message: _33.QueryUnreceivedAcksResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _33.QueryUnreceivedAcksResponse;
                    fromJSON(object: any): _33.QueryUnreceivedAcksResponse;
                    toJSON(message: _33.QueryUnreceivedAcksResponse): unknown;
                    fromPartial(object: Partial<_33.QueryUnreceivedAcksResponse>): _33.QueryUnreceivedAcksResponse;
                };
                QueryNextSequenceReceiveRequest: {
                    encode(message: _33.QueryNextSequenceReceiveRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _33.QueryNextSequenceReceiveRequest;
                    fromJSON(object: any): _33.QueryNextSequenceReceiveRequest;
                    toJSON(message: _33.QueryNextSequenceReceiveRequest): unknown;
                    fromPartial(object: Partial<_33.QueryNextSequenceReceiveRequest>): _33.QueryNextSequenceReceiveRequest;
                };
                QueryNextSequenceReceiveResponse: {
                    encode(message: _33.QueryNextSequenceReceiveResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _33.QueryNextSequenceReceiveResponse;
                    fromJSON(object: any): _33.QueryNextSequenceReceiveResponse;
                    toJSON(message: _33.QueryNextSequenceReceiveResponse): unknown;
                    fromPartial(object: Partial<_33.QueryNextSequenceReceiveResponse>): _33.QueryNextSequenceReceiveResponse;
                };
                GenesisState: {
                    encode(message: _32.GenesisState, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _32.GenesisState;
                    fromJSON(object: any): _32.GenesisState;
                    toJSON(message: _32.GenesisState): unknown;
                    fromPartial(object: Partial<_32.GenesisState>): _32.GenesisState;
                };
                PacketSequence: {
                    encode(message: _32.PacketSequence, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _32.PacketSequence;
                    fromJSON(object: any): _32.PacketSequence;
                    toJSON(message: _32.PacketSequence): unknown;
                    fromPartial(object: Partial<_32.PacketSequence>): _32.PacketSequence;
                };
                stateFromJSON(object: any): _31.State;
                stateToJSON(object: _31.State): string;
                orderFromJSON(object: any): _31.Order;
                orderToJSON(object: _31.Order): string;
                State: typeof _31.State;
                Order: typeof _31.Order;
                Channel: {
                    encode(message: _31.Channel, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _31.Channel;
                    fromJSON(object: any): _31.Channel;
                    toJSON(message: _31.Channel): unknown;
                    fromPartial(object: Partial<_31.Channel>): _31.Channel;
                };
                IdentifiedChannel: {
                    encode(message: _31.IdentifiedChannel, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _31.IdentifiedChannel;
                    fromJSON(object: any): _31.IdentifiedChannel;
                    toJSON(message: _31.IdentifiedChannel): unknown;
                    fromPartial(object: Partial<_31.IdentifiedChannel>): _31.IdentifiedChannel;
                };
                Counterparty: {
                    encode(message: _31.Counterparty, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _31.Counterparty;
                    fromJSON(object: any): _31.Counterparty;
                    toJSON(message: _31.Counterparty): unknown;
                    fromPartial(object: Partial<_31.Counterparty>): _31.Counterparty;
                };
                Packet: {
                    encode(message: _31.Packet, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _31.Packet;
                    fromJSON(object: any): _31.Packet;
                    toJSON(message: _31.Packet): unknown;
                    fromPartial(object: Partial<_31.Packet>): _31.Packet;
                };
                PacketState: {
                    encode(message: _31.PacketState, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _31.PacketState;
                    fromJSON(object: any): _31.PacketState;
                    toJSON(message: _31.PacketState): unknown;
                    fromPartial(object: Partial<_31.PacketState>): _31.PacketState;
                };
                Acknowledgement: {
                    encode(message: _31.Acknowledgement, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _31.Acknowledgement;
                    fromJSON(object: any): _31.Acknowledgement;
                    toJSON(message: _31.Acknowledgement): unknown;
                    fromPartial(object: Partial<_31.Acknowledgement>): _31.Acknowledgement;
                };
            };
        }
        namespace client {
            const v1: {
                MsgClientImpl: typeof _82.MsgClientImpl;
                QueryClientImpl: typeof _78.QueryClientImpl;
                createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                    clientState(request: _37.QueryClientStateRequest): Promise<_37.QueryClientStateResponse>;
                    clientStates(request?: _37.QueryClientStatesRequest): Promise<_37.QueryClientStatesResponse>;
                    consensusState(request: _37.QueryConsensusStateRequest): Promise<_37.QueryConsensusStateResponse>;
                    consensusStates(request: _37.QueryConsensusStatesRequest): Promise<_37.QueryConsensusStatesResponse>;
                    clientParams(request?: _37.QueryClientParamsRequest): Promise<_37.QueryClientParamsResponse>;
                };
                registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
                load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
                MessageComposer: {
                    encoded: {
                        createClient(value: _38.MsgCreateClient): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        updateClient(value: _38.MsgUpdateClient): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        upgradeClient(value: _38.MsgUpgradeClient): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        submitMisbehaviour(value: _38.MsgSubmitMisbehaviour): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                    };
                    withTypeUrl: {
                        createClient(value: _38.MsgCreateClient): {
                            typeUrl: string;
                            value: _38.MsgCreateClient;
                        };
                        updateClient(value: _38.MsgUpdateClient): {
                            typeUrl: string;
                            value: _38.MsgUpdateClient;
                        };
                        upgradeClient(value: _38.MsgUpgradeClient): {
                            typeUrl: string;
                            value: _38.MsgUpgradeClient;
                        };
                        submitMisbehaviour(value: _38.MsgSubmitMisbehaviour): {
                            typeUrl: string;
                            value: _38.MsgSubmitMisbehaviour;
                        };
                    };
                    toJSON: {
                        createClient(value: _38.MsgCreateClient): {
                            typeUrl: string;
                            value: unknown;
                        };
                        updateClient(value: _38.MsgUpdateClient): {
                            typeUrl: string;
                            value: unknown;
                        };
                        upgradeClient(value: _38.MsgUpgradeClient): {
                            typeUrl: string;
                            value: unknown;
                        };
                        submitMisbehaviour(value: _38.MsgSubmitMisbehaviour): {
                            typeUrl: string;
                            value: unknown;
                        };
                    };
                    fromJSON: {
                        createClient(value: any): {
                            typeUrl: string;
                            value: _38.MsgCreateClient;
                        };
                        updateClient(value: any): {
                            typeUrl: string;
                            value: _38.MsgUpdateClient;
                        };
                        upgradeClient(value: any): {
                            typeUrl: string;
                            value: _38.MsgUpgradeClient;
                        };
                        submitMisbehaviour(value: any): {
                            typeUrl: string;
                            value: _38.MsgSubmitMisbehaviour;
                        };
                    };
                    fromPartial: {
                        createClient(value: _38.MsgCreateClient): {
                            typeUrl: string;
                            value: _38.MsgCreateClient;
                        };
                        updateClient(value: _38.MsgUpdateClient): {
                            typeUrl: string;
                            value: _38.MsgUpdateClient;
                        };
                        upgradeClient(value: _38.MsgUpgradeClient): {
                            typeUrl: string;
                            value: _38.MsgUpgradeClient;
                        };
                        submitMisbehaviour(value: _38.MsgSubmitMisbehaviour): {
                            typeUrl: string;
                            value: _38.MsgSubmitMisbehaviour;
                        };
                    };
                };
                AminoConverter: {
                    "/ibc.core.client.v1.MsgCreateClient": {
                        aminoType: string;
                        toAmino: ({ clientState, consensusState, signer }: _38.MsgCreateClient) => {
                            client_state: {
                                type_url: string;
                                value: Uint8Array;
                            };
                            consensus_state: {
                                type_url: string;
                                value: Uint8Array;
                            };
                            signer: string;
                        };
                        fromAmino: ({ client_state, consensus_state, signer }: {
                            client_state: {
                                type_url: string;
                                value: Uint8Array;
                            };
                            consensus_state: {
                                type_url: string;
                                value: Uint8Array;
                            };
                            signer: string;
                        }) => _38.MsgCreateClient;
                    };
                    "/ibc.core.client.v1.MsgUpdateClient": {
                        aminoType: string;
                        toAmino: ({ clientId, header, signer }: _38.MsgUpdateClient) => {
                            client_id: string;
                            header: {
                                type_url: string;
                                value: Uint8Array;
                            };
                            signer: string;
                        };
                        fromAmino: ({ client_id, header, signer }: {
                            client_id: string;
                            header: {
                                type_url: string;
                                value: Uint8Array;
                            };
                            signer: string;
                        }) => _38.MsgUpdateClient;
                    };
                    "/ibc.core.client.v1.MsgUpgradeClient": {
                        aminoType: string;
                        toAmino: ({ clientId, clientState, consensusState, proofUpgradeClient, proofUpgradeConsensusState, signer }: _38.MsgUpgradeClient) => {
                            client_id: string;
                            client_state: {
                                type_url: string;
                                value: Uint8Array;
                            };
                            consensus_state: {
                                type_url: string;
                                value: Uint8Array;
                            };
                            proof_upgrade_client: Uint8Array;
                            proof_upgrade_consensus_state: Uint8Array;
                            signer: string;
                        };
                        fromAmino: ({ client_id, client_state, consensus_state, proof_upgrade_client, proof_upgrade_consensus_state, signer }: {
                            client_id: string;
                            client_state: {
                                type_url: string;
                                value: Uint8Array;
                            };
                            consensus_state: {
                                type_url: string;
                                value: Uint8Array;
                            };
                            proof_upgrade_client: Uint8Array;
                            proof_upgrade_consensus_state: Uint8Array;
                            signer: string;
                        }) => _38.MsgUpgradeClient;
                    };
                    "/ibc.core.client.v1.MsgSubmitMisbehaviour": {
                        aminoType: string;
                        toAmino: ({ clientId, misbehaviour, signer }: _38.MsgSubmitMisbehaviour) => {
                            client_id: string;
                            misbehaviour: {
                                type_url: string;
                                value: Uint8Array;
                            };
                            signer: string;
                        };
                        fromAmino: ({ client_id, misbehaviour, signer }: {
                            client_id: string;
                            misbehaviour: {
                                type_url: string;
                                value: Uint8Array;
                            };
                            signer: string;
                        }) => _38.MsgSubmitMisbehaviour;
                    };
                };
                MsgCreateClient: {
                    encode(message: _38.MsgCreateClient, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _38.MsgCreateClient;
                    fromJSON(object: any): _38.MsgCreateClient;
                    toJSON(message: _38.MsgCreateClient): unknown;
                    fromPartial(object: Partial<_38.MsgCreateClient>): _38.MsgCreateClient;
                };
                MsgCreateClientResponse: {
                    encode(_: _38.MsgCreateClientResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _38.MsgCreateClientResponse;
                    fromJSON(_: any): _38.MsgCreateClientResponse;
                    toJSON(_: _38.MsgCreateClientResponse): unknown;
                    fromPartial(_: Partial<_38.MsgCreateClientResponse>): _38.MsgCreateClientResponse;
                };
                MsgUpdateClient: {
                    encode(message: _38.MsgUpdateClient, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _38.MsgUpdateClient;
                    fromJSON(object: any): _38.MsgUpdateClient;
                    toJSON(message: _38.MsgUpdateClient): unknown;
                    fromPartial(object: Partial<_38.MsgUpdateClient>): _38.MsgUpdateClient;
                };
                MsgUpdateClientResponse: {
                    encode(_: _38.MsgUpdateClientResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _38.MsgUpdateClientResponse;
                    fromJSON(_: any): _38.MsgUpdateClientResponse;
                    toJSON(_: _38.MsgUpdateClientResponse): unknown;
                    fromPartial(_: Partial<_38.MsgUpdateClientResponse>): _38.MsgUpdateClientResponse;
                };
                MsgUpgradeClient: {
                    encode(message: _38.MsgUpgradeClient, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _38.MsgUpgradeClient;
                    fromJSON(object: any): _38.MsgUpgradeClient;
                    toJSON(message: _38.MsgUpgradeClient): unknown;
                    fromPartial(object: Partial<_38.MsgUpgradeClient>): _38.MsgUpgradeClient;
                };
                MsgUpgradeClientResponse: {
                    encode(_: _38.MsgUpgradeClientResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _38.MsgUpgradeClientResponse;
                    fromJSON(_: any): _38.MsgUpgradeClientResponse;
                    toJSON(_: _38.MsgUpgradeClientResponse): unknown;
                    fromPartial(_: Partial<_38.MsgUpgradeClientResponse>): _38.MsgUpgradeClientResponse;
                };
                MsgSubmitMisbehaviour: {
                    encode(message: _38.MsgSubmitMisbehaviour, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _38.MsgSubmitMisbehaviour;
                    fromJSON(object: any): _38.MsgSubmitMisbehaviour;
                    toJSON(message: _38.MsgSubmitMisbehaviour): unknown;
                    fromPartial(object: Partial<_38.MsgSubmitMisbehaviour>): _38.MsgSubmitMisbehaviour;
                };
                MsgSubmitMisbehaviourResponse: {
                    encode(_: _38.MsgSubmitMisbehaviourResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _38.MsgSubmitMisbehaviourResponse;
                    fromJSON(_: any): _38.MsgSubmitMisbehaviourResponse;
                    toJSON(_: _38.MsgSubmitMisbehaviourResponse): unknown;
                    fromPartial(_: Partial<_38.MsgSubmitMisbehaviourResponse>): _38.MsgSubmitMisbehaviourResponse;
                };
                QueryClientStateRequest: {
                    encode(message: _37.QueryClientStateRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _37.QueryClientStateRequest;
                    fromJSON(object: any): _37.QueryClientStateRequest;
                    toJSON(message: _37.QueryClientStateRequest): unknown;
                    fromPartial(object: Partial<_37.QueryClientStateRequest>): _37.QueryClientStateRequest;
                };
                QueryClientStateResponse: {
                    encode(message: _37.QueryClientStateResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _37.QueryClientStateResponse;
                    fromJSON(object: any): _37.QueryClientStateResponse;
                    toJSON(message: _37.QueryClientStateResponse): unknown;
                    fromPartial(object: Partial<_37.QueryClientStateResponse>): _37.QueryClientStateResponse;
                };
                QueryClientStatesRequest: {
                    encode(message: _37.QueryClientStatesRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _37.QueryClientStatesRequest;
                    fromJSON(object: any): _37.QueryClientStatesRequest;
                    toJSON(message: _37.QueryClientStatesRequest): unknown;
                    fromPartial(object: Partial<_37.QueryClientStatesRequest>): _37.QueryClientStatesRequest;
                };
                QueryClientStatesResponse: {
                    encode(message: _37.QueryClientStatesResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _37.QueryClientStatesResponse;
                    fromJSON(object: any): _37.QueryClientStatesResponse;
                    toJSON(message: _37.QueryClientStatesResponse): unknown;
                    fromPartial(object: Partial<_37.QueryClientStatesResponse>): _37.QueryClientStatesResponse;
                };
                QueryConsensusStateRequest: {
                    encode(message: _37.QueryConsensusStateRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _37.QueryConsensusStateRequest;
                    fromJSON(object: any): _37.QueryConsensusStateRequest;
                    toJSON(message: _37.QueryConsensusStateRequest): unknown;
                    fromPartial(object: Partial<_37.QueryConsensusStateRequest>): _37.QueryConsensusStateRequest;
                };
                QueryConsensusStateResponse: {
                    encode(message: _37.QueryConsensusStateResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _37.QueryConsensusStateResponse;
                    fromJSON(object: any): _37.QueryConsensusStateResponse;
                    toJSON(message: _37.QueryConsensusStateResponse): unknown;
                    fromPartial(object: Partial<_37.QueryConsensusStateResponse>): _37.QueryConsensusStateResponse;
                };
                QueryConsensusStatesRequest: {
                    encode(message: _37.QueryConsensusStatesRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _37.QueryConsensusStatesRequest;
                    fromJSON(object: any): _37.QueryConsensusStatesRequest;
                    toJSON(message: _37.QueryConsensusStatesRequest): unknown;
                    fromPartial(object: Partial<_37.QueryConsensusStatesRequest>): _37.QueryConsensusStatesRequest;
                };
                QueryConsensusStatesResponse: {
                    encode(message: _37.QueryConsensusStatesResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _37.QueryConsensusStatesResponse;
                    fromJSON(object: any): _37.QueryConsensusStatesResponse;
                    toJSON(message: _37.QueryConsensusStatesResponse): unknown;
                    fromPartial(object: Partial<_37.QueryConsensusStatesResponse>): _37.QueryConsensusStatesResponse;
                };
                QueryClientParamsRequest: {
                    encode(_: _37.QueryClientParamsRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _37.QueryClientParamsRequest;
                    fromJSON(_: any): _37.QueryClientParamsRequest;
                    toJSON(_: _37.QueryClientParamsRequest): unknown;
                    fromPartial(_: Partial<_37.QueryClientParamsRequest>): _37.QueryClientParamsRequest;
                };
                QueryClientParamsResponse: {
                    encode(message: _37.QueryClientParamsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _37.QueryClientParamsResponse;
                    fromJSON(object: any): _37.QueryClientParamsResponse;
                    toJSON(message: _37.QueryClientParamsResponse): unknown;
                    fromPartial(object: Partial<_37.QueryClientParamsResponse>): _37.QueryClientParamsResponse;
                };
                GenesisState: {
                    encode(message: _36.GenesisState, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _36.GenesisState;
                    fromJSON(object: any): _36.GenesisState;
                    toJSON(message: _36.GenesisState): unknown;
                    fromPartial(object: Partial<_36.GenesisState>): _36.GenesisState;
                };
                GenesisMetadata: {
                    encode(message: _36.GenesisMetadata, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _36.GenesisMetadata;
                    fromJSON(object: any): _36.GenesisMetadata;
                    toJSON(message: _36.GenesisMetadata): unknown;
                    fromPartial(object: Partial<_36.GenesisMetadata>): _36.GenesisMetadata;
                };
                IdentifiedGenesisMetadata: {
                    encode(message: _36.IdentifiedGenesisMetadata, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _36.IdentifiedGenesisMetadata;
                    fromJSON(object: any): _36.IdentifiedGenesisMetadata;
                    toJSON(message: _36.IdentifiedGenesisMetadata): unknown;
                    fromPartial(object: Partial<_36.IdentifiedGenesisMetadata>): _36.IdentifiedGenesisMetadata;
                };
                IdentifiedClientState: {
                    encode(message: _35.IdentifiedClientState, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _35.IdentifiedClientState;
                    fromJSON(object: any): _35.IdentifiedClientState;
                    toJSON(message: _35.IdentifiedClientState): unknown;
                    fromPartial(object: Partial<_35.IdentifiedClientState>): _35.IdentifiedClientState;
                };
                ConsensusStateWithHeight: {
                    encode(message: _35.ConsensusStateWithHeight, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _35.ConsensusStateWithHeight;
                    fromJSON(object: any): _35.ConsensusStateWithHeight;
                    toJSON(message: _35.ConsensusStateWithHeight): unknown;
                    fromPartial(object: Partial<_35.ConsensusStateWithHeight>): _35.ConsensusStateWithHeight;
                };
                ClientConsensusStates: {
                    encode(message: _35.ClientConsensusStates, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _35.ClientConsensusStates;
                    fromJSON(object: any): _35.ClientConsensusStates;
                    toJSON(message: _35.ClientConsensusStates): unknown;
                    fromPartial(object: Partial<_35.ClientConsensusStates>): _35.ClientConsensusStates;
                };
                ClientUpdateProposal: {
                    encode(message: _35.ClientUpdateProposal, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _35.ClientUpdateProposal;
                    fromJSON(object: any): _35.ClientUpdateProposal;
                    toJSON(message: _35.ClientUpdateProposal): unknown;
                    fromPartial(object: Partial<_35.ClientUpdateProposal>): _35.ClientUpdateProposal;
                };
                Height: {
                    encode(message: _35.Height, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _35.Height;
                    fromJSON(object: any): _35.Height;
                    toJSON(message: _35.Height): unknown;
                    fromPartial(object: Partial<_35.Height>): _35.Height;
                };
                Params: {
                    encode(message: _35.Params, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _35.Params;
                    fromJSON(object: any): _35.Params;
                    toJSON(message: _35.Params): unknown;
                    fromPartial(object: Partial<_35.Params>): _35.Params;
                };
            };
        }
        namespace commitment {
            const v1: {
                MerkleRoot: {
                    encode(message: _39.MerkleRoot, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _39.MerkleRoot;
                    fromJSON(object: any): _39.MerkleRoot;
                    toJSON(message: _39.MerkleRoot): unknown;
                    fromPartial(object: Partial<_39.MerkleRoot>): _39.MerkleRoot;
                };
                MerklePrefix: {
                    encode(message: _39.MerklePrefix, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _39.MerklePrefix;
                    fromJSON(object: any): _39.MerklePrefix;
                    toJSON(message: _39.MerklePrefix): unknown;
                    fromPartial(object: Partial<_39.MerklePrefix>): _39.MerklePrefix;
                };
                MerklePath: {
                    encode(message: _39.MerklePath, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _39.MerklePath;
                    fromJSON(object: any): _39.MerklePath;
                    toJSON(message: _39.MerklePath): unknown;
                    fromPartial(object: Partial<_39.MerklePath>): _39.MerklePath;
                };
                MerkleProof: {
                    encode(message: _39.MerkleProof, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _39.MerkleProof;
                    fromJSON(object: any): _39.MerkleProof;
                    toJSON(message: _39.MerkleProof): unknown;
                    fromPartial(object: Partial<_39.MerkleProof>): _39.MerkleProof;
                };
            };
        }
        namespace connection {
            const v1: {
                MsgClientImpl: typeof _83.MsgClientImpl;
                QueryClientImpl: typeof _79.QueryClientImpl;
                createRpcQueryExtension: (base: import("@cosmjs/stargate").QueryClient) => {
                    connection(request: _42.QueryConnectionRequest): Promise<_42.QueryConnectionResponse>;
                    connections(request?: _42.QueryConnectionsRequest): Promise<_42.QueryConnectionsResponse>;
                    clientConnections(request: _42.QueryClientConnectionsRequest): Promise<_42.QueryClientConnectionsResponse>;
                    connectionClientState(request: _42.QueryConnectionClientStateRequest): Promise<_42.QueryConnectionClientStateResponse>;
                    connectionConsensusState(request: _42.QueryConnectionConsensusStateRequest): Promise<_42.QueryConnectionConsensusStateResponse>;
                };
                registry: readonly [string, import("@cosmjs/proto-signing").GeneratedType][];
                load: (protoRegistry: import("@cosmjs/proto-signing").Registry) => void;
                MessageComposer: {
                    encoded: {
                        connectionOpenInit(value: _43.MsgConnectionOpenInit): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        connectionOpenTry(value: _43.MsgConnectionOpenTry): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        connectionOpenAck(value: _43.MsgConnectionOpenAck): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                        connectionOpenConfirm(value: _43.MsgConnectionOpenConfirm): {
                            typeUrl: string;
                            value: Uint8Array;
                        };
                    };
                    withTypeUrl: {
                        connectionOpenInit(value: _43.MsgConnectionOpenInit): {
                            typeUrl: string;
                            value: _43.MsgConnectionOpenInit;
                        };
                        connectionOpenTry(value: _43.MsgConnectionOpenTry): {
                            typeUrl: string;
                            value: _43.MsgConnectionOpenTry;
                        };
                        connectionOpenAck(value: _43.MsgConnectionOpenAck): {
                            typeUrl: string;
                            value: _43.MsgConnectionOpenAck;
                        };
                        connectionOpenConfirm(value: _43.MsgConnectionOpenConfirm): {
                            typeUrl: string;
                            value: _43.MsgConnectionOpenConfirm;
                        };
                    };
                    toJSON: {
                        connectionOpenInit(value: _43.MsgConnectionOpenInit): {
                            typeUrl: string;
                            value: unknown;
                        };
                        connectionOpenTry(value: _43.MsgConnectionOpenTry): {
                            typeUrl: string;
                            value: unknown;
                        };
                        connectionOpenAck(value: _43.MsgConnectionOpenAck): {
                            typeUrl: string;
                            value: unknown;
                        };
                        connectionOpenConfirm(value: _43.MsgConnectionOpenConfirm): {
                            typeUrl: string;
                            value: unknown;
                        };
                    };
                    fromJSON: {
                        connectionOpenInit(value: any): {
                            typeUrl: string;
                            value: _43.MsgConnectionOpenInit;
                        };
                        connectionOpenTry(value: any): {
                            typeUrl: string;
                            value: _43.MsgConnectionOpenTry;
                        };
                        connectionOpenAck(value: any): {
                            typeUrl: string;
                            value: _43.MsgConnectionOpenAck;
                        };
                        connectionOpenConfirm(value: any): {
                            typeUrl: string;
                            value: _43.MsgConnectionOpenConfirm;
                        };
                    };
                    fromPartial: {
                        connectionOpenInit(value: _43.MsgConnectionOpenInit): {
                            typeUrl: string;
                            value: _43.MsgConnectionOpenInit;
                        };
                        connectionOpenTry(value: _43.MsgConnectionOpenTry): {
                            typeUrl: string;
                            value: _43.MsgConnectionOpenTry;
                        };
                        connectionOpenAck(value: _43.MsgConnectionOpenAck): {
                            typeUrl: string;
                            value: _43.MsgConnectionOpenAck;
                        };
                        connectionOpenConfirm(value: _43.MsgConnectionOpenConfirm): {
                            typeUrl: string;
                            value: _43.MsgConnectionOpenConfirm;
                        };
                    };
                };
                AminoConverter: {
                    "/ibc.core.connection.v1.MsgConnectionOpenInit": {
                        aminoType: string;
                        toAmino: ({ clientId, counterparty, version, delayPeriod, signer }: _43.MsgConnectionOpenInit) => {
                            client_id: string;
                            counterparty: {
                                client_id: string;
                                connection_id: string;
                                prefix: {
                                    key_prefix: Uint8Array;
                                };
                            };
                            version: {
                                identifier: string;
                                features: string[];
                            };
                            delay_period: string;
                            signer: string;
                        };
                        fromAmino: ({ client_id, counterparty, version, delay_period, signer }: {
                            client_id: string;
                            counterparty: {
                                client_id: string;
                                connection_id: string;
                                prefix: {
                                    key_prefix: Uint8Array;
                                };
                            };
                            version: {
                                identifier: string;
                                features: string[];
                            };
                            delay_period: string;
                            signer: string;
                        }) => _43.MsgConnectionOpenInit;
                    };
                    "/ibc.core.connection.v1.MsgConnectionOpenTry": {
                        aminoType: string;
                        toAmino: ({ clientId, previousConnectionId, clientState, counterparty, delayPeriod, counterpartyVersions, proofHeight, proofInit, proofClient, proofConsensus, consensusHeight, signer }: _43.MsgConnectionOpenTry) => {
                            client_id: string;
                            previous_connection_id: string;
                            client_state: {
                                type_url: string;
                                value: Uint8Array;
                            };
                            counterparty: {
                                client_id: string;
                                connection_id: string;
                                prefix: {
                                    key_prefix: Uint8Array;
                                };
                            };
                            delay_period: string;
                            counterparty_versions: {
                                identifier: string;
                                features: string[];
                            }[];
                            proof_height: import("../helpers").AminoHeight;
                            proof_init: Uint8Array;
                            proof_client: Uint8Array;
                            proof_consensus: Uint8Array;
                            consensus_height: import("../helpers").AminoHeight;
                            signer: string;
                        };
                        fromAmino: ({ client_id, previous_connection_id, client_state, counterparty, delay_period, counterparty_versions, proof_height, proof_init, proof_client, proof_consensus, consensus_height, signer }: {
                            client_id: string;
                            previous_connection_id: string;
                            client_state: {
                                type_url: string;
                                value: Uint8Array;
                            };
                            counterparty: {
                                client_id: string;
                                connection_id: string;
                                prefix: {
                                    key_prefix: Uint8Array;
                                };
                            };
                            delay_period: string;
                            counterparty_versions: {
                                identifier: string;
                                features: string[];
                            }[];
                            proof_height: import("../helpers").AminoHeight;
                            proof_init: Uint8Array;
                            proof_client: Uint8Array;
                            proof_consensus: Uint8Array;
                            consensus_height: import("../helpers").AminoHeight;
                            signer: string;
                        }) => _43.MsgConnectionOpenTry;
                    };
                    "/ibc.core.connection.v1.MsgConnectionOpenAck": {
                        aminoType: string;
                        toAmino: ({ connectionId, counterpartyConnectionId, version, clientState, proofHeight, proofTry, proofClient, proofConsensus, consensusHeight, signer }: _43.MsgConnectionOpenAck) => {
                            connection_id: string;
                            counterparty_connection_id: string;
                            version: {
                                identifier: string;
                                features: string[];
                            };
                            client_state: {
                                type_url: string;
                                value: Uint8Array;
                            };
                            proof_height: import("../helpers").AminoHeight;
                            proof_try: Uint8Array;
                            proof_client: Uint8Array;
                            proof_consensus: Uint8Array;
                            consensus_height: import("../helpers").AminoHeight;
                            signer: string;
                        };
                        fromAmino: ({ connection_id, counterparty_connection_id, version, client_state, proof_height, proof_try, proof_client, proof_consensus, consensus_height, signer }: {
                            connection_id: string;
                            counterparty_connection_id: string;
                            version: {
                                identifier: string;
                                features: string[];
                            };
                            client_state: {
                                type_url: string;
                                value: Uint8Array;
                            };
                            proof_height: import("../helpers").AminoHeight;
                            proof_try: Uint8Array;
                            proof_client: Uint8Array;
                            proof_consensus: Uint8Array;
                            consensus_height: import("../helpers").AminoHeight;
                            signer: string;
                        }) => _43.MsgConnectionOpenAck;
                    };
                    "/ibc.core.connection.v1.MsgConnectionOpenConfirm": {
                        aminoType: string;
                        toAmino: ({ connectionId, proofAck, proofHeight, signer }: _43.MsgConnectionOpenConfirm) => {
                            connection_id: string;
                            proof_ack: Uint8Array;
                            proof_height: import("../helpers").AminoHeight;
                            signer: string;
                        };
                        fromAmino: ({ connection_id, proof_ack, proof_height, signer }: {
                            connection_id: string;
                            proof_ack: Uint8Array;
                            proof_height: import("../helpers").AminoHeight;
                            signer: string;
                        }) => _43.MsgConnectionOpenConfirm;
                    };
                };
                MsgConnectionOpenInit: {
                    encode(message: _43.MsgConnectionOpenInit, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _43.MsgConnectionOpenInit;
                    fromJSON(object: any): _43.MsgConnectionOpenInit;
                    toJSON(message: _43.MsgConnectionOpenInit): unknown;
                    fromPartial(object: Partial<_43.MsgConnectionOpenInit>): _43.MsgConnectionOpenInit;
                };
                MsgConnectionOpenInitResponse: {
                    encode(_: _43.MsgConnectionOpenInitResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _43.MsgConnectionOpenInitResponse;
                    fromJSON(_: any): _43.MsgConnectionOpenInitResponse;
                    toJSON(_: _43.MsgConnectionOpenInitResponse): unknown;
                    fromPartial(_: Partial<_43.MsgConnectionOpenInitResponse>): _43.MsgConnectionOpenInitResponse;
                };
                MsgConnectionOpenTry: {
                    encode(message: _43.MsgConnectionOpenTry, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _43.MsgConnectionOpenTry;
                    fromJSON(object: any): _43.MsgConnectionOpenTry;
                    toJSON(message: _43.MsgConnectionOpenTry): unknown;
                    fromPartial(object: Partial<_43.MsgConnectionOpenTry>): _43.MsgConnectionOpenTry;
                };
                MsgConnectionOpenTryResponse: {
                    encode(_: _43.MsgConnectionOpenTryResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _43.MsgConnectionOpenTryResponse;
                    fromJSON(_: any): _43.MsgConnectionOpenTryResponse;
                    toJSON(_: _43.MsgConnectionOpenTryResponse): unknown;
                    fromPartial(_: Partial<_43.MsgConnectionOpenTryResponse>): _43.MsgConnectionOpenTryResponse;
                };
                MsgConnectionOpenAck: {
                    encode(message: _43.MsgConnectionOpenAck, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _43.MsgConnectionOpenAck;
                    fromJSON(object: any): _43.MsgConnectionOpenAck;
                    toJSON(message: _43.MsgConnectionOpenAck): unknown;
                    fromPartial(object: Partial<_43.MsgConnectionOpenAck>): _43.MsgConnectionOpenAck;
                };
                MsgConnectionOpenAckResponse: {
                    encode(_: _43.MsgConnectionOpenAckResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _43.MsgConnectionOpenAckResponse;
                    fromJSON(_: any): _43.MsgConnectionOpenAckResponse;
                    toJSON(_: _43.MsgConnectionOpenAckResponse): unknown;
                    fromPartial(_: Partial<_43.MsgConnectionOpenAckResponse>): _43.MsgConnectionOpenAckResponse;
                };
                MsgConnectionOpenConfirm: {
                    encode(message: _43.MsgConnectionOpenConfirm, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _43.MsgConnectionOpenConfirm;
                    fromJSON(object: any): _43.MsgConnectionOpenConfirm;
                    toJSON(message: _43.MsgConnectionOpenConfirm): unknown;
                    fromPartial(object: Partial<_43.MsgConnectionOpenConfirm>): _43.MsgConnectionOpenConfirm;
                };
                MsgConnectionOpenConfirmResponse: {
                    encode(_: _43.MsgConnectionOpenConfirmResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _43.MsgConnectionOpenConfirmResponse;
                    fromJSON(_: any): _43.MsgConnectionOpenConfirmResponse;
                    toJSON(_: _43.MsgConnectionOpenConfirmResponse): unknown;
                    fromPartial(_: Partial<_43.MsgConnectionOpenConfirmResponse>): _43.MsgConnectionOpenConfirmResponse;
                };
                QueryConnectionRequest: {
                    encode(message: _42.QueryConnectionRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _42.QueryConnectionRequest;
                    fromJSON(object: any): _42.QueryConnectionRequest;
                    toJSON(message: _42.QueryConnectionRequest): unknown;
                    fromPartial(object: Partial<_42.QueryConnectionRequest>): _42.QueryConnectionRequest;
                };
                QueryConnectionResponse: {
                    encode(message: _42.QueryConnectionResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _42.QueryConnectionResponse;
                    fromJSON(object: any): _42.QueryConnectionResponse;
                    toJSON(message: _42.QueryConnectionResponse): unknown;
                    fromPartial(object: Partial<_42.QueryConnectionResponse>): _42.QueryConnectionResponse;
                };
                QueryConnectionsRequest: {
                    encode(message: _42.QueryConnectionsRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _42.QueryConnectionsRequest;
                    fromJSON(object: any): _42.QueryConnectionsRequest;
                    toJSON(message: _42.QueryConnectionsRequest): unknown;
                    fromPartial(object: Partial<_42.QueryConnectionsRequest>): _42.QueryConnectionsRequest;
                };
                QueryConnectionsResponse: {
                    encode(message: _42.QueryConnectionsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _42.QueryConnectionsResponse;
                    fromJSON(object: any): _42.QueryConnectionsResponse;
                    toJSON(message: _42.QueryConnectionsResponse): unknown;
                    fromPartial(object: Partial<_42.QueryConnectionsResponse>): _42.QueryConnectionsResponse;
                };
                QueryClientConnectionsRequest: {
                    encode(message: _42.QueryClientConnectionsRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _42.QueryClientConnectionsRequest;
                    fromJSON(object: any): _42.QueryClientConnectionsRequest;
                    toJSON(message: _42.QueryClientConnectionsRequest): unknown;
                    fromPartial(object: Partial<_42.QueryClientConnectionsRequest>): _42.QueryClientConnectionsRequest;
                };
                QueryClientConnectionsResponse: {
                    encode(message: _42.QueryClientConnectionsResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _42.QueryClientConnectionsResponse;
                    fromJSON(object: any): _42.QueryClientConnectionsResponse;
                    toJSON(message: _42.QueryClientConnectionsResponse): unknown;
                    fromPartial(object: Partial<_42.QueryClientConnectionsResponse>): _42.QueryClientConnectionsResponse;
                };
                QueryConnectionClientStateRequest: {
                    encode(message: _42.QueryConnectionClientStateRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _42.QueryConnectionClientStateRequest;
                    fromJSON(object: any): _42.QueryConnectionClientStateRequest;
                    toJSON(message: _42.QueryConnectionClientStateRequest): unknown;
                    fromPartial(object: Partial<_42.QueryConnectionClientStateRequest>): _42.QueryConnectionClientStateRequest;
                };
                QueryConnectionClientStateResponse: {
                    encode(message: _42.QueryConnectionClientStateResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _42.QueryConnectionClientStateResponse;
                    fromJSON(object: any): _42.QueryConnectionClientStateResponse;
                    toJSON(message: _42.QueryConnectionClientStateResponse): unknown;
                    fromPartial(object: Partial<_42.QueryConnectionClientStateResponse>): _42.QueryConnectionClientStateResponse;
                };
                QueryConnectionConsensusStateRequest: {
                    encode(message: _42.QueryConnectionConsensusStateRequest, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _42.QueryConnectionConsensusStateRequest;
                    fromJSON(object: any): _42.QueryConnectionConsensusStateRequest;
                    toJSON(message: _42.QueryConnectionConsensusStateRequest): unknown;
                    fromPartial(object: Partial<_42.QueryConnectionConsensusStateRequest>): _42.QueryConnectionConsensusStateRequest;
                };
                QueryConnectionConsensusStateResponse: {
                    encode(message: _42.QueryConnectionConsensusStateResponse, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _42.QueryConnectionConsensusStateResponse;
                    fromJSON(object: any): _42.QueryConnectionConsensusStateResponse;
                    toJSON(message: _42.QueryConnectionConsensusStateResponse): unknown;
                    fromPartial(object: Partial<_42.QueryConnectionConsensusStateResponse>): _42.QueryConnectionConsensusStateResponse;
                };
                GenesisState: {
                    encode(message: _41.GenesisState, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _41.GenesisState;
                    fromJSON(object: any): _41.GenesisState;
                    toJSON(message: _41.GenesisState): unknown;
                    fromPartial(object: Partial<_41.GenesisState>): _41.GenesisState;
                };
                stateFromJSON(object: any): _40.State;
                stateToJSON(object: _40.State): string;
                State: typeof _40.State;
                ConnectionEnd: {
                    encode(message: _40.ConnectionEnd, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _40.ConnectionEnd;
                    fromJSON(object: any): _40.ConnectionEnd;
                    toJSON(message: _40.ConnectionEnd): unknown;
                    fromPartial(object: Partial<_40.ConnectionEnd>): _40.ConnectionEnd;
                };
                IdentifiedConnection: {
                    encode(message: _40.IdentifiedConnection, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _40.IdentifiedConnection;
                    fromJSON(object: any): _40.IdentifiedConnection;
                    toJSON(message: _40.IdentifiedConnection): unknown;
                    fromPartial(object: Partial<_40.IdentifiedConnection>): _40.IdentifiedConnection;
                };
                Counterparty: {
                    encode(message: _40.Counterparty, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _40.Counterparty;
                    fromJSON(object: any): _40.Counterparty;
                    toJSON(message: _40.Counterparty): unknown;
                    fromPartial(object: Partial<_40.Counterparty>): _40.Counterparty;
                };
                ClientPaths: {
                    encode(message: _40.ClientPaths, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _40.ClientPaths;
                    fromJSON(object: any): _40.ClientPaths;
                    toJSON(message: _40.ClientPaths): unknown;
                    fromPartial(object: Partial<_40.ClientPaths>): _40.ClientPaths;
                };
                ConnectionPaths: {
                    encode(message: _40.ConnectionPaths, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _40.ConnectionPaths;
                    fromJSON(object: any): _40.ConnectionPaths;
                    toJSON(message: _40.ConnectionPaths): unknown;
                    fromPartial(object: Partial<_40.ConnectionPaths>): _40.ConnectionPaths;
                };
                Version: {
                    encode(message: _40.Version, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _40.Version;
                    fromJSON(object: any): _40.Version;
                    toJSON(message: _40.Version): unknown;
                    fromPartial(object: Partial<_40.Version>): _40.Version;
                };
            };
        }
    }
    namespace lightclients {
        namespace localhost {
            const v1: {
                ClientState: {
                    encode(message: _44.ClientState, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _44.ClientState;
                    fromJSON(object: any): _44.ClientState;
                    toJSON(message: _44.ClientState): unknown;
                    fromPartial(object: Partial<_44.ClientState>): _44.ClientState;
                };
            };
        }
        namespace solomachine {
            const v1: {
                dataTypeFromJSON(object: any): _45.DataType;
                dataTypeToJSON(object: _45.DataType): string;
                DataType: typeof _45.DataType;
                ClientState: {
                    encode(message: _45.ClientState, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _45.ClientState;
                    fromJSON(object: any): _45.ClientState;
                    toJSON(message: _45.ClientState): unknown;
                    fromPartial(object: Partial<_45.ClientState>): _45.ClientState;
                };
                ConsensusState: {
                    encode(message: _45.ConsensusState, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _45.ConsensusState;
                    fromJSON(object: any): _45.ConsensusState;
                    toJSON(message: _45.ConsensusState): unknown;
                    fromPartial(object: Partial<_45.ConsensusState>): _45.ConsensusState;
                };
                Header: {
                    encode(message: _45.Header, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _45.Header;
                    fromJSON(object: any): _45.Header;
                    toJSON(message: _45.Header): unknown;
                    fromPartial(object: Partial<_45.Header>): _45.Header;
                };
                Misbehaviour: {
                    encode(message: _45.Misbehaviour, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _45.Misbehaviour;
                    fromJSON(object: any): _45.Misbehaviour;
                    toJSON(message: _45.Misbehaviour): unknown;
                    fromPartial(object: Partial<_45.Misbehaviour>): _45.Misbehaviour;
                };
                SignatureAndData: {
                    encode(message: _45.SignatureAndData, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _45.SignatureAndData;
                    fromJSON(object: any): _45.SignatureAndData;
                    toJSON(message: _45.SignatureAndData): unknown;
                    fromPartial(object: Partial<_45.SignatureAndData>): _45.SignatureAndData;
                };
                TimestampedSignatureData: {
                    encode(message: _45.TimestampedSignatureData, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _45.TimestampedSignatureData;
                    fromJSON(object: any): _45.TimestampedSignatureData;
                    toJSON(message: _45.TimestampedSignatureData): unknown;
                    fromPartial(object: Partial<_45.TimestampedSignatureData>): _45.TimestampedSignatureData;
                };
                SignBytes: {
                    encode(message: _45.SignBytes, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _45.SignBytes;
                    fromJSON(object: any): _45.SignBytes;
                    toJSON(message: _45.SignBytes): unknown;
                    fromPartial(object: Partial<_45.SignBytes>): _45.SignBytes;
                };
                HeaderData: {
                    encode(message: _45.HeaderData, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _45.HeaderData;
                    fromJSON(object: any): _45.HeaderData;
                    toJSON(message: _45.HeaderData): unknown;
                    fromPartial(object: Partial<_45.HeaderData>): _45.HeaderData;
                };
                ClientStateData: {
                    encode(message: _45.ClientStateData, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _45.ClientStateData;
                    fromJSON(object: any): _45.ClientStateData;
                    toJSON(message: _45.ClientStateData): unknown;
                    fromPartial(object: Partial<_45.ClientStateData>): _45.ClientStateData;
                };
                ConsensusStateData: {
                    encode(message: _45.ConsensusStateData, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _45.ConsensusStateData;
                    fromJSON(object: any): _45.ConsensusStateData;
                    toJSON(message: _45.ConsensusStateData): unknown;
                    fromPartial(object: Partial<_45.ConsensusStateData>): _45.ConsensusStateData;
                };
                ConnectionStateData: {
                    encode(message: _45.ConnectionStateData, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _45.ConnectionStateData;
                    fromJSON(object: any): _45.ConnectionStateData;
                    toJSON(message: _45.ConnectionStateData): unknown;
                    fromPartial(object: Partial<_45.ConnectionStateData>): _45.ConnectionStateData;
                };
                ChannelStateData: {
                    encode(message: _45.ChannelStateData, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _45.ChannelStateData;
                    fromJSON(object: any): _45.ChannelStateData;
                    toJSON(message: _45.ChannelStateData): unknown;
                    fromPartial(object: Partial<_45.ChannelStateData>): _45.ChannelStateData;
                };
                PacketCommitmentData: {
                    encode(message: _45.PacketCommitmentData, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _45.PacketCommitmentData;
                    fromJSON(object: any): _45.PacketCommitmentData;
                    toJSON(message: _45.PacketCommitmentData): unknown;
                    fromPartial(object: Partial<_45.PacketCommitmentData>): _45.PacketCommitmentData;
                };
                PacketAcknowledgementData: {
                    encode(message: _45.PacketAcknowledgementData, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _45.PacketAcknowledgementData;
                    fromJSON(object: any): _45.PacketAcknowledgementData;
                    toJSON(message: _45.PacketAcknowledgementData): unknown;
                    fromPartial(object: Partial<_45.PacketAcknowledgementData>): _45.PacketAcknowledgementData;
                };
                PacketReceiptAbsenceData: {
                    encode(message: _45.PacketReceiptAbsenceData, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _45.PacketReceiptAbsenceData;
                    fromJSON(object: any): _45.PacketReceiptAbsenceData;
                    toJSON(message: _45.PacketReceiptAbsenceData): unknown;
                    fromPartial(object: Partial<_45.PacketReceiptAbsenceData>): _45.PacketReceiptAbsenceData;
                };
                NextSequenceRecvData: {
                    encode(message: _45.NextSequenceRecvData, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _45.NextSequenceRecvData;
                    fromJSON(object: any): _45.NextSequenceRecvData;
                    toJSON(message: _45.NextSequenceRecvData): unknown;
                    fromPartial(object: Partial<_45.NextSequenceRecvData>): _45.NextSequenceRecvData;
                };
            };
        }
        namespace tendermint {
            const v1: {
                ClientState: {
                    encode(message: _46.ClientState, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _46.ClientState;
                    fromJSON(object: any): _46.ClientState;
                    toJSON(message: _46.ClientState): unknown;
                    fromPartial(object: Partial<_46.ClientState>): _46.ClientState;
                };
                ConsensusState: {
                    encode(message: _46.ConsensusState, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _46.ConsensusState;
                    fromJSON(object: any): _46.ConsensusState;
                    toJSON(message: _46.ConsensusState): unknown;
                    fromPartial(object: Partial<_46.ConsensusState>): _46.ConsensusState;
                };
                Misbehaviour: {
                    encode(message: _46.Misbehaviour, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _46.Misbehaviour;
                    fromJSON(object: any): _46.Misbehaviour;
                    toJSON(message: _46.Misbehaviour): unknown;
                    fromPartial(object: Partial<_46.Misbehaviour>): _46.Misbehaviour;
                };
                Header: {
                    encode(message: _46.Header, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _46.Header;
                    fromJSON(object: any): _46.Header;
                    toJSON(message: _46.Header): unknown;
                    fromPartial(object: Partial<_46.Header>): _46.Header;
                };
                Fraction: {
                    encode(message: _46.Fraction, writer?: import("protobufjs").Writer): import("protobufjs").Writer;
                    decode(input: Uint8Array | import("protobufjs").Reader, length?: number): _46.Fraction;
                    fromJSON(object: any): _46.Fraction;
                    toJSON(message: _46.Fraction): unknown;
                    fromPartial(object: Partial<_46.Fraction>): _46.Fraction;
                };
            };
        }
    }
}
